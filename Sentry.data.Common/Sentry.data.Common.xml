<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sentry.data.Common</name>
    </assembly>
    <members>
        <member name="T:Sentry.data.Common.Utilities">
            <summary>
            Provides common code between projects
            </summary>
            
        </member>
        <member name="M:Sentry.data.Common.Utilities.GenerateDatasetDropLocation(Sentry.data.Core.Dataset)">
            <summary>
            Generates full drop location path for a dataset
            </summary>
            <param name="ds"></param>
            <returns></returns>
        </member>
        <member name="M:Sentry.data.Common.Utilities.GenerateDatasetDropLocation(System.String,System.String)">
            <summary>
            Generates full drop location path for a dataset.  <i>Specify all parameters</i>
            </summary>
            <param name="categoryName"></param>
            <param name="datasetName"></param>
            <returns></returns>
        </member>
        <member name="M:Sentry.data.Common.Utilities.GenerateCustomStorageLocation(System.String[])">
            <summary>
            Generate storage location path.  <i>Specify all parameters</i>
            </summary>
            <param name="levels"></param>
            <returns></returns>
        </member>
        <member name="M:Sentry.data.Common.Utilities.GenerateDatafileKey(Sentry.data.Core.Dataset,System.DateTime,System.String,Sentry.data.Core.DatasetFileConfig)">
            <summary>
            Generate storage key for datafile
            </summary>
            <param name="ds"></param>
            <param name="now"></param>
            <param name="filename"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:Sentry.data.Common.Utilities.GenerateLocationKey(Sentry.data.Core.DatasetFileConfig)">
            <summary>
            Returns storage path
            </summary>
            <param name="datasetFileConfig"></param>
            <returns></returns>
        </member>
        <member name="M:Sentry.data.Common.Utilities.FormatDatasetName(System.String)">
            <summary>
            Generates directory friendly dataset name
            </summary>
            <param name="dsName"></param>
            <returns></returns>
        </member>
        <member name="M:Sentry.data.Common.Utilities.GenerateDatasetFrequencyLocationName(System.String)">
            <summary>
            Generates abbreviated frequency name
            </summary>
            <param name="frequency"></param>
            <returns></returns>
        </member>
        <member name="M:Sentry.data.Common.Utilities.GetDistinctFileExtensions(System.Collections.Generic.IList{Sentry.data.Core.DatasetFile})">
            <summary>
            Return distinct list of file extensions within a list of datasetfile objects
            </summary>
            <param name="dfList"></param>
            <returns></returns>
        </member>
        <member name="M:Sentry.data.Common.Utilities.GetFileExtension(System.String)">
            <summary>
            Get file extension of file name
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Sentry.data.Common.Utilities.LoadDatasetFileConfigsByDatasetID(System.Int32,Sentry.data.Core.IDatasetContext)">
            <summary>
            Return list of DatasetFileConfig object for a Dataset Id
            </summary>
            <param name="datasetId"></param>
            <param name="dscontext"></param>
            <returns></returns>
        </member>
        <member name="M:Sentry.data.Common.Utilities.GetMatchingDatasetFileConfigs(System.Collections.Generic.List{Sentry.data.Core.DatasetFileConfig},System.String)">
            <summary>
            Returns matching DatasetFileConfigs based on input filepath (full path)
            </summary>
            <param name="dfcList"></param>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Sentry.data.Common.Utilities.ProcessInputFile(Sentry.data.Core.Dataset,Sentry.data.Core.DatasetFileConfig,System.Boolean,Sentry.data.Core.LoaderRequest,System.String)">
            <summary>
            Process input file and returns DatasetFile object.  Upload user based on FileInfo object metadata.
            </summary>
            <param name="dataset"></param>
            <param name="dfConfig"></param>
            <param name="file"></param>
            <param name="isBundled"></param>
            <param name="response"></param>
            <returns></returns>
        </member>
        <member name="M:Sentry.data.Common.Utilities.ProcessBundleFile(Sentry.data.Core.DatasetFileConfig,Sentry.data.Core.Dataset,Sentry.data.Core.BundleResponse,Sentry.data.Core.IDatasetContext)">
            <summary>
            
            </summary>
            <param name="fileConfig"></param>
            <param name="ds"></param>
            <param name="response"></param>
            <param name="dscontext"></param>
        </member>
        <member name="M:Sentry.data.Common.Utilities.GetFileOwner(System.IO.FileInfo)">
            <summary>
            Return File Owner name
            </summary>
            <param name="fileInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Sentry.data.Common.Utilities.RemoveProcessedFile(Sentry.data.Core.DatasetFile,System.IO.FileInfo)">
            <summary>
            
            </summary>
            <param name="df"></param>
            <param name="fi"></param>
        </member>
        <member name="M:Sentry.data.Common.Utilities.IsExtentionPreviewCompatible(System.String)">
            <summary>
            
            </summary>
            <param name="extension"></param>
            <returns></returns>
        </member>
        <member name="M:Sentry.data.Common.Utilities.IsExtentionPushToSAScompatible(System.String)">
            <summary>
            
            </summary>
            <param name="extension"></param>
            <returns></returns>
        </member>
        <member name="M:Sentry.data.Common.Utilities.GenerateHash(System.String)">
            <summary>
            Generates hash based on input, returns GUID 
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Sentry.data.Common.Utilities.CreateEventAsync(Sentry.data.Core.Event)">
            <summary>
            
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Sentry.data.Common.DirectoryUtilities.EffectivePermissions(System.String,System.String)">
            <summary>
            Utilizes the Windows API to return a list of effective permissions for given user on a directory path
            </summary>
            <param name="user"></param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Sentry.data.Common.DirectoryUtilities.HasPermission(System.String,System.String,System.Collections.Generic.List{Sentry.data.Common.DirectoryUtilities.AccessRights})">
            <summary>
            Determines if user has all AccessRights on specified path.  Will return false if
            only paritial AccessRights are found.
            </summary>
            <param name="user"></param>
            <param name="path"></param>
            <param name="rights"></param>
            <returns></returns>
        </member>
        <member name="T:SentryConsoleApplicationTemplateCSharp.ConsoleAppMyProject.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SentryConsoleApplicationTemplateCSharp.ConsoleAppMyProject.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SentryConsoleApplicationTemplateCSharp.ConsoleAppMyProject.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
    </members>
</doc>
