@model Sentry.data.Web.MigrationRequestModel
<div class="md-form">
    @Html.HiddenFor(x => x.NewNonQManagedNamedEnvironment)
    <label class="active" for="">Named Environment</label> <!-- Not using helper for this because it causes duplicate labels and MDB select snatches it from text box -->
    <div class="dropdown-container">
        <span id="DatasetNamedEnvironmentSpinner"></span>
        @if (Model.DatasetNamedEnvironmentDropDown.Any())
        {
            @Html.DropDownListFor(x => x.DatasetNamedEnvironment, Model.DatasetNamedEnvironmentDropDown, new { @class = "mdb-select" })
        }
        else
        {
            @Html.TextBoxFor(x => x.DatasetNamedEnvironment, new { @class = "form-control" })
        }

        @Html.ValidationMessageFor(model => Model.DatasetNamedEnvironment, "", new { @class = "text-danger" })
    </div>
</div>
<div class="md-form">
    @Html.LabelFor((model) => model.DatasetNamedEnvironmentType, new { @class = "active" })
    <div class="dropdown-container">
        <span id="DatasetNamedEnvironmentTypeSpinner"></span>
        @if (Model.DatasetNamedEnvironmentDropDown.Any() && !Model.NewNonQManagedNamedEnvironment)
        {
            @Html.DropDownListFor(x => x.DatasetNamedEnvironmentType, Model.DatasetNamedEnvironmentTypeDropDown, new { @class = "mdb-select", @disabled = "true" })
            @Html.HiddenFor(x => x.DatasetNamedEnvironmentType)
        }
        else
        {
            @Html.DropDownListFor(x => x.DatasetNamedEnvironmentType, Model.DatasetNamedEnvironmentTypeDropDown, new { @class = "mdb-select" })
        }
        @Html.ValidationMessageFor(model => Model.DatasetNamedEnvironmentType, "", new { @class = "text-danger" })
    </div>
</div>