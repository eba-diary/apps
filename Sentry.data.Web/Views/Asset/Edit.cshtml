@model EditAssetModel
@{
    ViewData["Title"] = "Edit";
}
<div class="page-header">
    <h1>Edit Listing</h1>
</div>
<p>
    Efficiently unleash cross-media information without cross-media value.
    Quickly maximize timely deliverables for real-time schemas. Dramatically
    maintain clicks-and-mortar solutions without functional solutions.
</p>

<div class="panel panel-default">
    <div class="panel-body">
        @{using (Html.BeginForm())
@Html.AntiForgeryToken()

        <div class="form-horizontal">
            <fieldset>
                @*Show the custom validation summary*@
                @Html.DisplayFor((model) => ViewData.ModelState)

                @Html.HiddenFor((model) => model.Id)

                <div class="form-group">
                    @Html.LabelFor((model) => model.Name, new {@class = "control-label col-sm-2"})
                    <div class="col-sm-10">
                        @Html.EditorFor((model) => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor((model) => model.Name, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor((model) => model.Description, new {@class = "control-label col-sm-2"})
                    <div class="col-sm-10">
                        @Html.EditorFor((model) => model.Description, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor((model) => model.Description, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor((model) => model.CategoryIDs, new {@class = "control-label col-sm-2"})
                    <div class="col-sm-10">
                        @Html.ListBoxFor((model) => model.CategoryIDs, Model.AllCategories, new {@class = "form-control", multiple = ""})
                        @Html.ValidationMessageFor((model) => model.CategoryIDs, "", new {@class = "text-danger"})
                    </div>
                </div>

                @*<div class="row">
                    <div class="col-sm-4">
                        <div class="form-group">
                            <label class="control-label col-sm-6" for="StartDate">Auction Dates</label>
                            <div class="col-sm-6">
                                @Html.EditorFor((model) => model.StartDate, new {htmlAttributes = new {@class = "form-control"}})
                                @Html.ValidationMessageFor((model) => model.StartDate, "", new {@class = "text-danger"})
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            <label class="control-label col-sm-1" for="StartDate">to</label>
                            <div class="col-sm-6">
                                @Html.EditorFor((model) => model.EndDate, new {htmlAttributes = new {@class = "form-control"}})
                                @Html.ValidationMessageFor((model) => model.EndDate, "", new  {@class = "text-danger"})
                            </div>
                        </div>
                    </div>
                </div>*@

                <div class="form-group">
                    <div class="col-sm-offset-2 col-sm-10">
                        <input type="submit" value="Save" class="btn btn-primary" />
                    </div>
                </div>
            </fieldset>
        </div>
        }
    </div>
</div>

<div>
    @Html.ActionLink("Back to Asset", "Details", new {id = Model.Id })
</div>

@section Scripts {
<script>
        $(function () {
            data.Asset.EditInit();
        });
</script>
}
