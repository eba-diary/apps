@model Sentry.data.Web.JobModel
@*@using (Html.BeginCollectionItem("RetrieverJob"))
    {*@

<h4>Where Do You Want Us to Pull From?</h4>

<div class="md-form">
    @Html.LabelFor((model) => model.SelectedSourceType, new { @class = "mdb-main-label" })
    @Html.DropDownListFor((model) => model.SelectedSourceType, Model.SourceTypesDropdown, new { @class = "mdb-select" })
    @Html.ValidationMessageFor((model) => model.SelectedSourceType, "", new { @class = "text-danger" })
</div>

<div class="md-form">
    @Html.LabelFor((model) => model.SelectedDataSource, new { @class = "mdb-main-label" })
    <div class="material-tooltip-main" data-toggle="tooltip" title="If the required data source does not exist, please contact DSCSupport@sentry.com for assistance.">
        @Html.DropDownListFor((model) => model.SelectedDataSource, Model.SourcesForDropdown, new { @class = "mdb-select" })
        @Html.ValidationMessageFor((model) => model.SelectedDataSource, "", new { @class = "text-danger" })
    </div>
    <div class="securityPanel" style="display:none;">
        <div class="md-form">
            <span class="fas fa-lock lockIcon" data-toggle="tooltip" data-placement="top" title="Secure"></span>
        </div>
        <span>
            <input id="RequestAccessButton" type="button" value="Request Access" class="btn btn-primary"
                   data-toggle="tooltip" data-placement="top" title="Request Access to Data Source" />
        </span>
    </div>
</div>

<div class="dataSourceInfoPanel" style="display:none;">
    <div class="row">
        <div class="col">
            Contact: <div class="d-inline" id="primaryContact"><a id="dataSourceContactEmail" href=""></a></div>
        </div>
    </div>
</div>

<div class="md-form fieldDescription">
    <label class="md-form"></label>
    <div class="">
        <span class="text-muted">
            <em id="dataSourceDescription"></em>
        </span>
    </div>
</div>

<div class="editDataSourceLink" style="display:none;">
    <label class=""></label>
    <div class="">
        <a id="editDataSource" class="backToList" href="/Config/Source/Edit"><span class="fas fa-chevron-right"></span>Edit Data Source</a>
    </div>
</div>

@*@if (Model.Security.CanCreateDataSource)
    {
        <div class="form-group">
            <label class="control-label col-md-2"></label>
            <div class="col-md-10">
                <a class="backToList" href="/Config/Source/Create"><span class="glyphicon glyphicon-plus"></span>Create new Data Source</a>
            </div>
        </div>
    }*@

<div class="questionairePanel" style="display:none">
    @*<hr />
        <h3>Job Configuration</h3>
        <hr />*@

    <div class="jobquestion sourceLocation">
        <div class="md-form configQuestion">
            <h5>Where will we find the data?</h5>
        </div>

        <div class="md-form questionDescription">
            <span class="text-muted">
                <em id="baseURL"></em>
            </span>
        </div>

        <div class="md-form">
            @Html.LabelFor(model => model.RelativeUri, htmlAttributes: new { @class = "control-label" })
            <input type="text" id="baseURLTextBox" readonly="readonly" disabled="disabled" class="" />
            @Html.TextBoxFor(model => model.RelativeUri, new { @class = "w-50", @placeholder = "Do not include starting forward slash (/)" })
            @Html.ValidationMessageFor(model => model.RelativeUri, "", new { @class = "text-danger" })
        </div>

        <div class="httpSourcePanel" style="display:none;">

            <div class="md-form">
                @Html.LabelFor(model => model.SelectedRequestMethod, htmlAttributes: new { @class = "mdb-main-label" })
                @Html.DropDownListFor(model => model.SelectedRequestMethod, Model.RequestMethodDropdown, new { @class = "mdb-select", })
                @Html.ValidationMessageFor(model => model.SelectedRequestMethod, "", new { @class = "text-danger" })
            </div>
            <div class="httpPostPanel" style="display:none;">
                <div class="md-form">
                    @Html.LabelFor(model => model.SelectedRequestDataFormat, htmlAttributes: new { @class = "mdb-main-label" })
                    @Html.DropDownListFor(model => model.SelectedRequestDataFormat, Model.RequestDataFormatDropdown, new { @class = "mdb-select", })
                    @Html.ValidationMessageFor(model => model.SelectedRequestDataFormat, "", new { @class = "text-danger" })
                </div>
                <div class="md-form">
                    @Html.LabelFor(model => model.HttpRequestBody, htmlAttributes: new { @class = "control-label" })
                    @Html.TextAreaFor(model => model.HttpRequestBody, new { rows = "15", cols = "132", htmlAttributes = new { @class = "form-control", @placeholder = "JSON format" } })
                    @Html.ValidationMessageFor(model => model.HttpRequestBody, "", new { @class = "text-danger" })
                </div>
                <div class="md-form">
                    <input type="button" id="jsonPreview" value="Validate Body" class="btn btn-primary" />
                </div>
                <div class="jsonValidateResultsPanel md-form" style="display:none;">
                    <pre id="json-viewer"></pre>
                </div>
            </div>
        </div>
    </div>

    <div class="jobquestion ftpPattern">
        <div class="md-form">
            @Html.LabelFor((model) => model.FtpPattern, new { @class = "mdb-main-label" })
            @Html.DropDownListFor((model) => model.FtpPattern, Model.FtpPatternDropDown, new { @class = "mdb-select" })
            @Html.ValidationMessageFor((model) => model.FtpPattern, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="jobquestion searchCriteria">
        <div class="form-group configQuestion">
            <hr />
            <h5>Should selective files be processed?</h5>
        </div>

        <div class="md-form questionDescription">
            <span class="text-muted">
                <em>All searches are performed on full file name (including file extension).&nbsp;&nbsp;</em>
                <em>A regular expression search of \. is the least restrictive and will match anything with a period.</em>
            </span>
        </div>

        <div class="searchCriteria searchCriteriaIsRegex">
            <div class="md-form">
                @Html.LabelFor(model => model.IsRegexSearch, htmlAttributes: new { @class = "control-label" })
                @Html.CheckBoxFor(model => model.IsRegexSearch, new { @class = "" })
                @Html.ValidationMessageFor(model => model.IsRegexSearch, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group fieldDescription">
            <label class="control-label"></label>
            <span class="text-muted">
                <em> Not familiar with <a target="_blank" href="https://regexr.com/">Regex Expressions?</a></em>
            </span>
        </div>

        <div class="md-form">
            @Html.LabelFor(model => model.SearchCriteria, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.SearchCriteria, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SearchCriteria, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="jobquestion targetFileName">
        <div class="md-form configQuestion">
            <hr />
            <h5 id="targetfilenamequestion"></h5>
        </div>

        <div class="md-form questionDescription">
            <span class="text-muted">
                <em id="targetfilenamedesc"></em>
            </span>
        </div>

        <div class="md-form">
            @Html.LabelFor(model => model.TargetFileName, htmlAttributes: new { @class = "control-label optional", @id = "targetfilenamelabel" })
            @Html.EditorFor(model => model.TargetFileName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Exclude file extension" } })
            @Html.ValidationMessageFor(model => model.TargetFileName, "", new { @class = "text-danger" })
        </div>
    </div>


    @Html.HiddenFor(model => model.Schedule)

    <div class="jobquestion schedule">
        <div id="schedulePanel" style="display:none">
            <div class="form-group configQuestion">
                <h5>How often would you like us to pull the data?</h5>
            </div>
            <div class="md-form">
                @Html.LabelFor(model => model.SchedulePicker, htmlAttributes: new { @class = "mdb-main-label" })
                @Html.DropDownListFor(model => model.SchedulePicker, Model.SchedulePickerDropdown, new { @class = "mdb-select" })
                @Html.ValidationMessageFor(model => model.SchedulePicker, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="md-form scheduler" id="hourlyPicker">
            <label class="control-label">Every Hour at</label>
            <input id="cronHourlyTimePicker" type="number" max="59" min="0" class="form-control" placeholder="Minute" />
        </div>

        <div class="md-form scheduler input-group" id="dailyPicker">
            <div class="input-group-prepend">
                <span class="input-group-text md-addon">Every Day at</span>
            </div>
            <input class="form-control timepicker" placeholder="Time" id="cronDailyJobTimePicker" />
            <div class="input-group-append">
                <span class="input-group-text md-addon">CST</span>
            </div>
        </div>

        <div class="md-form scheduler input-group" id="weeklyPicker">
            <div class="input-group-prepend">
                <span class="input-group-text md-addon">Every Week on</span>
            </div>
            <select id="cronWeeklyDayPicker" class="mdb-select">
                <option selected disabled>Day of the Week</option>
                <option value="0">Sunday</option>
                <option value="1">Monday</option>
                <option value="2">Tuesday</option>
                <option value="3">Wednesday</option>
                <option value="4">Thursday</option>
                <option value="5">Friday</option>
                <option value="6">Saturday</option>
            </select>
            <input class="form-control timepicker" placeholder="Time" id="cronWeeklyJobTimePicker" />
            <div class="input-group-append">
                <span class="input-group-text md-addon">CST</span>
            </div>
        </div>

        <div class="md-form scheduler input-group" id="monthlyPicker">
            <div class="input-group-prepend">
                <span class="input-group-text md-addon">Day and Time</span>
            </div>
            <input id="cronMonthlyDayPicker" type="number" max="31" min="1" class="form-control" placeholder="Day of the Month (1-31)" />
            <input class="form-control timepicker" placeholder="Time" id="cronMonthlyJobTimePicker" aria-describedby="cronMonthlyTimeAddOn" />
            <div class="input-group-append">
                <span class="input-group-text md-addon">CST</span>
            </div>
        </div>

        <div class="md-form scheduler input-group" id="yearlyPicker">
            <div class="input-group-prepend">
                <span class="input-group-text md-addon">Month, Day, and Time</span>
            </div>
            <select id="cronYearlyMonthPicker" class="mdb-select">
                <option selected disabled>Month</option>
                <option value="1">January</option>
                <option value="2">February</option>
                <option value="3">March</option>
                <option value="4">April</option>
                <option value="5">May</option>
                <option value="6">June</option>
                <option value="7">July</option>
                <option value="8">August</option>
                <option value="9">September</option>
                <option value="10">October</option>
                <option value="11">November</option>
                <option value="12">December</option>
            </select>
            <input id="cronYearlyDayPicker" type="number" max="31" min="1" class="form-control" placeholder="Day of the Month (1-31)" />
            <input class="form-control timepicker" placeholder="Time" id="cronYearlyJobTimePicker" />
            <div class="input-group-append">
                <span class="input-group-text md-addon">CST</span>
            </div>
        </div>

        <div id="scheduleRow" class="form-group" style="display: none;">
            <label class="control-label">The next four scheduled times will be in your local Time</label>
            <div id="scheduledTimes" class="">
            </div>
        </div>
    </div>
</div>