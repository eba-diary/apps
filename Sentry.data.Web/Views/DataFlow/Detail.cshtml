@model DataFlowDetailModel

@{
    ViewBag.Title = "Data Flow Detail";
}

<div class="detailContainer ">

    <span class="hidden-item" id="producerAssetGroupName">@Model.ProducerAssetGroupName</span>

    <h2 class="pt-3 pl-0">
        DataFlow Details (<span>@Model.Name</span>)@if (Model.DisplayDataflowEdit)
        {
            <span id="edit-dataflow-icon" class="clickable" data-toggle="tooltip" data-placement="top" title="Edit DataFlow" onclick="data.DataFlow.EditUrlRedirect(@Model.Id)"><span class="far fa-edit"></span></span>
        }
    </h2>
    @if (!Model.DisplayDataflowEdit)
    {
        <div id="RequestAccessManageTypeSection" class="requestAccessStage pb-4 pt-4">
            <h6 class="pt-1">To Request Manage Access:</h6>
            <div class="btn-group" role="group">
                <button id="RequestAccessManageMyAccessBtn" type="button" onclick="window.open('https://myaccess.sentry.com/identityiq/accessRequest/accessRequest.jsf#/accessRequest/selectUser?quickLink=Request%20Access','_blank')" class="btn btn-default waves-effect waves-light requestAccessButton">Use MyAccess to Request <em id="RequestAccessManageEntitlement" class="font-style-normal"></em></button>
                <button id="RequestAccessManageCopyBtn" type="button" class="w-20 btn btn-default waves-effect waves-light requestAccessButton material-tooltip-main" data-toggle="tooltip" data-placement="right" title="Copy to clipboard" data-original-title="Copy to clipboard"><em class="far fa-copy fa-2x"></em></button>
            </div>
        </div>
    }
    @if (Model.ObjectStatus == Sentry.data.Core.GlobalEnums.ObjectStatusEnum.Pending_Delete)
    {
        <h3 style="color:red"><strong>Pending Delete - Data will not be processed through this data flow</strong></h3>
    }
    <div class="pl-0 pt-3">
        <h4 class="pt-1">Associated Retriever Jobs</h4>
        <div class="d-block">
            @if (Model.AssociatedJobs == null || Model.AssociatedJobs.Count > 0)
            {
                <p><em>These jobs pull data from external sources and send it to this data flow.</em></p>
                <ul class="stepList">
                    @foreach (int id in Model.AssociatedJobs)
                    {
                        <li>
                            @Html.Action("_RetrieverJob", "Config", new { jobId = id })
                        </li>
                    }
                </ul>
            }
            else
            {
                <p>There are no retriever jobs sending data to this data flow.</p>
            }
        </div>
    </div>

    <h4 class="pt-3">DataFlow Steps </h4>
    <ul class="stepList">
        @foreach (DataFlowStepModel step in Model.Step)
        {
            <li class="retJob @step.ActionName step">
                <div class="jobHeader categoryBanner-blue">
                    <h6 class="pt-2">@step.ExecutionOrder.ToString()</h6>
                    <h6 class="pt-2">@step.ActionName</h6>
                    <em class="retJobDetails tracker-menu-icon fas fa-chevron-up"></em>
                </div>
                <div class="jobContainer" style="display:none;">
                    <div>@step.ActionDescription</div>
                    <br />
                    <div><strong class="bold">This step processes files dropped in this AWS S3 url:</strong></div>
                    <div class="filePath">@step.RootAwsUrl@step.TriggetKey</div>
                    @if (Model.UserSecurity.ShowAdminControls && step.TargetPrefix != null)
                    {
                        <div><strong class="bold">This step produces output to this long term storage url:</strong></div>
                        <div class="filePath">@step.RootAwsUrl@step.TargetPrefix</div>
                    }
                </div>
            </li>
        }
    </ul>

    <h4><span>Target Schema</span></h4>
    <div id="targetSchema">
        <div id="targetSchemaSpinner"></div>
    </div>
</div>

@section Scripts {
    <script>
        $(function () {
            data.DataFlow.DataFlowDetailInit(@Model.Id);
        });
    </script>
}