@model DataFlowModel

@{
    ViewBag.Title = "Data Flow Form";
}
@*This DIV tag is used to scope JQuery element selectors in DataFlow.js to just this view*@
<div id="DataFlowFormContainer">
    @using (Html.BeginForm("DataFlowForm", "DataFlow", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        <span id="DataFlowFormContainer_HiddenFor">
            @Html.HiddenFor(x => x.DataFlowId);
            @Html.HiddenFor(x => x.StorageCode);
            @Html.HiddenFor(x => x.CreatedBy);
            @Html.HiddenFor(x => x.PrimaryContactId);
            @Html.HiddenFor(x => x.IsSecured);
        </span>
        <div id="dataflow-home-wrapper" class="col-lg-12">
            <div class="dataflow-home-photo bg-photo-dataflow ic">
                <span>Do you have data that you want to use and share with others? <br /> We can help. First, you'll need to tell us about your data.</span>
                <h4>Let's Get Started</h4>
                <a rel="noopener" href="https://confluence.sentry.com/pages/viewpage.action?spaceKey=CLA&title=Send+Data+to+DSC" target="_blank" class="btn btn-info p-2">
                    Help <em class="fas fa-question"></em>
                </a>
            </div>
        </div>

        @*Show the custom validation summary*@
        @Html.DisplayFor((model) => ViewData.ModelState)

        <div class="md-form">
            <h4>How will the data be sent to us?</h4>
            <div class="material-tooltip-main" data-toggle="tooltip" title="Will your process send a file to DSC (Drop/Topic)? Or will DSC need to pick up the file from an external location (DSC_Pull)?">
                @Html.DropDownListFor(
                    x => x.IngestionTypeSelection,
                    Model.IngestionTypeDropDown,
                    new { @class = "mdb-select" })  
            </div>

            <div id="topicNameContainer" class="md-form">
                <h4>What is Topic Name?</h4>
                @Html.TextBoxFor((m) => m.TopicName, Model.TopicName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => Model.TopicName, "", new { @class = "text-danger" })
            </div>

        </div>

        <div class="namePanel" style="display:none;">
            <div class="md-form">
                <h4>What SAID asset will be sending data?</h4>
                @Html.DropDownListFor(x => x.SAIDAssetKeyCode, Model.SAIDAssetDropDown, new { @class = "mdb-select", searchable = "Search SAID Assets..." })
                @Html.ValidationMessageFor(model => Model.SAIDAssetKeyCode, "", new { @class = "text-danger" })
            </div>
            <div id="NamedEnvironmentPartial">
                @Html.Partial("_NamedEnvironment", Model)
            </div>
            <div class="md-form">
                <h4>What would you like to name this Data Flow?</h4>
                @Html.TextBoxFor((m) => m.Name, Model.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => Model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="compressionPanel" style="display:none;">
            <div class="md-form">
                <h4>Is your incoming data compressed?</h4>
                <a data-toggle="tooltip" class="material-tooltip-main" title="Yes, if the file ends in .zip or .gzip.">
                    @Html.DropDownListFor((m) => m.IsCompressed, Model.CompressionDropdown, new { @class = "mdb-select" })
                </a>
            </div>

            <div class="md-form compressionJobPanel" style="display:none">
                <div id="compressionJobPanel">
                    @if (Model.CompressionJob != null)
                    {
                        @Html.Partial("_CompressionJob", Model.CompressionJob.First())
                    }
                    else
                    {
                        @Html.Partial("_CompressionJob", new CompressionModel())
                    }
                </div>
            </div>


        @*DSC PULL*@
        </div>
        <div class="retrieverPanel" style="display:none">
            <div id="retrieverJobPanel">
                @Html.EditorFor(model => Model.RetrieverJob)
            </div>
        </div>


        <div class="preProcessingPanel" style="display:none;">
            <div class="md-form">
                <h4>Does your data require Preprocessing?</h4>
                <a class="material-tooltip-main" data-toggle="tooltip" title="Yes, if the file has a unique delimiter ( ex. ||, ^ ), a non-standard file encoding (ex. combine 1252 and UTF-8), or a heavily nested .json layout.">
                    @Html.DropDownListFor((m) => m.IsPreProcessingRequired, Model.PreProcessingRequiredDropdown, new { @class = "mdb-select" })
                </a>
            </div>
            <div class="md-form preProcessingJobPanel" style="display:none;">
                @* PreProcessing Options *@
                <div class="md-form">
                    @Html.LabelFor((model) => model.PreProcessingSelection, new { @class = "mdb-main-label" })
                    @Html.DropDownListFor(
                        x => x.PreProcessingSelection,
                        Model.PreProcessingOptionsDropdown,
                        new { @class = "mdb-select", @placeholder = "Select option" })
                </div>
            </div>
        </div>
        <div class="schemaMapPanel md-form" style="display:none;">
            <h4>Where do you want the data to go?</h4>
            <div id="schemaMapPanel">
                @Html.EditorForMany(m => m.SchemaMaps, x => x.Index)
            </div>
        </div>
        <div class="form-group formSubmitButtons" style="display: none;">
            <div>
                <input type="submit" value="Submit" class="btn btn-primary waves-effect waves-light" />
                <a id="CancelButton" class="btn btn-warning  waves-effect waves-light" href="">Cancel</a>
            </div>
        </div>
    }
</div>
<div id="DatasetFormContainer" style="display: none;">
    <div id="DatasetFormContent"></div>
</div>
<div id="DatasetFileConfigFormContainer" style="display: none;">
    <div id="DatasetFileConfigFormContent"></div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/prettyCron")
    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.css">
    <script src="//cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.js"></script>
    <script type="text/javascript">
        $(function () {
            data.DataFlow.DataFlowFormInit(@Model.SelectedDataset, @Model.SelectedSchema);
        });
    </script>
}