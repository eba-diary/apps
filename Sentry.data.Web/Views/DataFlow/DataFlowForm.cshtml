@model DataFlowModel

@{
    ViewBag.Title = "Data Flow Form";
}
@*This DIV tag is used to scope JQuery element selectors in DataFlow.js to just this view*@
<div id="DataFlowFormContainer">
    @using (Html.BeginForm("DataFlowForm", "DataFlow", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        @Html.HiddenFor(x => x.DataFlowId);
        @Html.HiddenFor(x => x.StorageCode);

        <div id="dataflow-home-wrapper" class="col-md-12 col-lg-12">
            <div class="dataflow-home-photo bg-photo-dataflow ic">
                <span>Do you have data that you want to use and share with others? <br /> We can help. First, you'll need to tell us about your data.</span>
            </div>
        </div>

        <div class="col-md-12">
            @*Show the custom validation summary*@
            @Html.DisplayFor((model) => ViewData.ModelState)
        </div>
        <div class="form-group col-md-12">
            <br />
            <div class="col-md-5"><h4>How will the data be sent to us?</h4>    </div>
            <div class="col-md-4" data-toggle="tooltip" data-placement="right" title="Will your process send a file to DSC (User_Push)? Or will DSC need to pick up the file from an external location (DSC_Pull)?">
                @Html.DropDownListFor(
                    x => x.IngestionTypeSelection,
                    Model.IngestionTypeDropDown,
                    new { @class = "selectpicker" })
            </div>
        </div>
        <div class="namePanel" style="display:none;">
            <div class="form-group col-md-12">
                <div class="col-md-5"><h4>What SAID asset will be sending data?</h4></div>
                <div class="col-md-4">
                    <div class="dropdown-container">
                        @Html.DropDownListFor(x =>
                            x.SAIDAssetKeyCode,
                            Model.SAIDAssetDropDown,
                            new { @class = "selectpicker-filtering" })
                        @Html.ValidationMessageFor(model => Model.SAIDAssetKeyCode, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div id="NamedEnvironmentPartial">
                @Html.Partial("_NamedEnvironment", Model)
            </div>
            <div class="form-group col-md-12">
                <div class="col-md-5"><h4>What would you like to name this Data Flow?</h4></div>
                <div class="col-md-4">
                    @Html.TextBoxFor((m) => m.Name, Model.Name, new { @class = "form-control edit-dataset-row" })
                    @Html.ValidationMessageFor(model => Model.Name, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <br />
        <div class="compressionPanel" style="display:none;">
            <div class="form-group col-md-12">
                <div class="col-md-5"><h4>Is Your incoming data compressed?</h4></div>
                <div class="col-md-1" data-toggle="tooltip" data-placement="right" title="Yes, if the file ends in .zip or .gzip.">
                    @Html.DropDownListFor((m) => m.IsCompressed, Model.CompressionDropdown, new { @class = "form-control edit-dataset-row selectpicker" })
                </div>
            </div>
            <br />
            <div class="form-group col-md-12 compressionJobPanel" style="display:none">
                <div id="compressionJobPanel">
                    @if (Model.CompressionJob != null)
                    {
                        @Html.Partial("_CompressionJob", Model.CompressionJob.First())
                    }
                    else
                    {
                        @Html.Partial("_CompressionJob", new CompressionModel())
                    }
                </div>
            </div>
        </div>
        <br />
        <div class="form-group col-md-12 retrieverPanel" style="display:none">
            <div id="retrieverJobPanel">
                @Html.EditorFor(model => Model.RetrieverJob)
            </div>
        </div>
        <br />
        <div class="preProcessingPanel" style="display:none;">
            <div class="form-group col-md-12">
                <div class="col-md-5"><h4>Does your data require Preprocessing?</h4></div>
                <div class="col-md-1" data-toggle="tooltip" data-placement="right" title="Yes, if the file has a unique delimiter ( ex. ||, ^ ), a non-standard file encoding (ex. combine 1252 and UTF-8), or a heavily nested .json layout.">
                    @Html.DropDownListFor((m) => m.IsPreProcessingRequired, Model.PreProcessingRequiredDropdown, new { @class = "form-control edit-dataset-row selectpicker" })
                </div>
            </div>
            <div class="form-group col-md-12 preProcessingJobPanel" style="display:none;">
                @* PreProcessing Options *@
                <div class="form-group">
                    @Html.LabelFor((model) => model.PreProcessingSelection, new { @class = "control-label col-md-5" })
                    @*<div class="col-md-4">
                            <select id="PreprocessingOptions" name="PreprocessingOptions" class="form-control edit-dataset-row" style="width:100%">
                                @foreach (var item in Model.PreProcessingOptionsDropdown)
                                {
                                    <option selected="@item.Selected" value="@item.Value">@item.Text</option>
                                }
                            </select>
                            @Html.ValidationMessageFor((model) => model.PreprocessingOptions, "", new { @class = "text-danger" })
                        </div>*@
                    <div class="col-md-4">
                        @Html.DropDownListFor(
                            x => x.PreProcessingSelection,
                            Model.PreProcessingOptionsDropdown,
                            new { @class = "selectpicker" })
                    </div>
                </div>
            </div>
        </div>
        <br />
        <div class="schemaMapPanel" style="display:none;">
            <div class="form-group col-md-12">
                <div class="col-md-5"><h4>Where do you want the data to go?</h4></div>
                <div id="schemaMapPanel" class="form-group col-md-12">
                    @Html.EditorForMany(m => m.SchemaMaps, x => x.Index)
                    @if (!Model.CLA3332_ConsolidatedDataFlows)
                    {
                        <button type="button" id="btnAddSchemaMap" class="btn btn-success"><span>Add Another Target</span></button>
                    }
                </div>
            </div>
        </div>

        <br />
        <div class="form-group formSubmitButtons" style="display: none;">
            <div>
                <input type="submit" value="Submit" class="btn btn-primary waves-effect waves-light" />
                <a id="CancelButton" class="btn btn-warning  waves-effect waves-light" href="">Cancel</a>
            </div>
        </div>
    }
</div>
<div id="DatasetFormContainer" style="display: none;">
    <div id="DatasetFormContent"></div>
</div>
<div id="DatasetFileConfigFormContainer" style="display: none;">
    <div id="DatasetFileConfigFormContent"></div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/prettyCron")
    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.css">
    <script src="//cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.js"></script>
    <script type="text/javascript">
        $(function () {
            data.DataFlow.CLA3332_ConsolidatedDataFlows = @Model.CLA3332_ConsolidatedDataFlows.ToString().ToLower();
            data.DataFlow.DataFlowFormInit();

            @if (!Model.CLA3332_ConsolidatedDataFlows) {
                <text>
                //Adding delete button logic here to ensure it is added to
                // any additional schemaMapLineItems that are added
                $(document).on("click", "#btnSchemaMapRemove", function () {
                    if ($('.schemaMapLineItem.active').length === 1) {
                        Sentry.ShowModalAlert("At least one schema mapping is required");
                    }
                    else {
                        var self = $(this);
                        var parentContainer = self.parent(".schemaMapLineItem");
                        var isDeleteHidden = parentContainer.find("[id$=IsDeleted]");
                        //Set hidden value for when object is model is passed back to controller
                        $(isDeleteHidden).val("True");
                        //remove active class from parentcontainer to ensure not counted
                        // when ensuring there is at least one active mapping
                        $(parentContainer).removeClass("active");
                        //Hide parentcontainer to ensure not displayed to user after deletion
                        $(parentContainer).hide();
                    }
                })
                </text>
            }
        });
    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/js/bootstrap-select.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/css/bootstrap-select.min.css">
    <style>
        select.form-control {
            border-radius: 4px;
        }

        select.edit-dataset-row {
            border-radius: 4px;
        }

        span.glyphicon.glyphicon-warning-sign.form-control-feedback {
            text-align: unset;
        }
    </style>
}