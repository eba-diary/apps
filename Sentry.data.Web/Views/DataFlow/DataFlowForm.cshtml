@model DataFlowModel

@{
    ViewBag.Title = "Data Flow Form";
}
@*This DIV tag is used to scope JQuery element selectors in DataFlow.js to just this view*@
<div id="DataFlowFormContainer" class="md-form">
    @using (Html.BeginForm("DataFlowForm", "DataFlow", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        @Html.HiddenFor(x => x.DataFlowId);
        @Html.HiddenFor(x => x.StorageCode);
        @Html.HiddenFor(x => x.CreatedBy);

        <div id="dataflow-home-wrapper" class="col-lg-12">
            <div class="dataflow-home-photo bg-photo-dataflow ic">
                <span>Do you have data that you want to use and share with others? <br /> We can help. First, you'll need to tell us about your data.</span>
                <h4>Let's Get Started</h4>
                <a href="https://confluence.sentry.com/pages/viewpage.action?spaceKey=CLA&title=Send+Data+to+DSC" target="_blank" class="btn btn-info p-2">
                    <i class="icon-help"></i>  Help
                </a>
            </div>
        </div>

        @*Show the custom validation summary*@
        @Html.DisplayFor((model) => ViewData.ModelState)

        <div class="md-form">
            <h4>How will the data be sent to us?</h4>
            <select class="mdb-select" id="IngestionTypeSelection">
                @foreach (var ingestionType in Model.IngestionTypeDropDown)
                {
                    <option value=@ingestionType.Value>@ingestionType.Text</option>
                }
            </select>
        </div>

        <div class="namePanel" style="display:none;">
            <div class="md-form">
                <h4>What SAID asset will be sending data?</h4>
                @Html.DropDownListFor(x => x.SAIDAssetKeyCode, Model.SAIDAssetDropDown, new { @class = "mdb-select", searchable = "Search SAID Assets..." })
                @Html.ValidationMessageFor(model => Model.SAIDAssetKeyCode, "", new { @class = "text-danger" })
            </div>
            <div id="NamedEnvironmentPartial">
                @Html.Partial("_NamedEnvironment", Model)
            </div>
            <div class="md-form">
                <h4>What would you like to name this Data Flow?</h4>
                @Html.TextBoxFor((m) => m.Name, Model.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => Model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="compressionPanel" style="display:none;">
            <div class="md-form">
                <h4>Is Your incoming data compressed?</h4>
                <div data-toggle="tooltip" data-placement="right" title="Yes, if the file ends in .zip or .gzip.">
                    @Html.DropDownListFor((m) => m.IsCompressed, Model.CompressionDropdown, new { @class = "mdb-select" })
                </div>
            </div>
            <div class="md-form compressionJobPanel" style="display:none">
                <div id="compressionJobPanel">
                    @if (Model.CompressionJob != null)
                    {
                        @Html.Partial("_CompressionJob", Model.CompressionJob.First())
                    }
                    else
                    {
                        @Html.Partial("_CompressionJob", new CompressionModel())
                    }
                </div>
            </div>
        </div>
        <div class="md-form retrieverPanel" style="display:none">
            <div id="retrieverJobPanel">
                @Html.EditorFor(model => Model.RetrieverJob)
            </div>
        </div>
        <div class="preProcessingPanel" style="display:none;">
            <div class="md-form">
                <h4>Does your data require Preprocessing?</h4>
                <div data-toggle="tooltip" data-placement="right" title="Yes, if the file has a unique delimiter ( ex. ||, ^ ), a non-standard file encoding (ex. combine 1252 and UTF-8), or a heavily nested .json layout.">
                    @Html.DropDownListFor((m) => m.IsPreProcessingRequired, Model.PreProcessingRequiredDropdown, new { @class = "form-control edit-dataset-row" })
                </div>
            </div>
            <div class="md-form preProcessingJobPanel" style="display:none;">
                @* PreProcessing Options *@
                <div class="form-group">
                    @Html.LabelFor((model) => model.PreProcessingSelection, new { @class = "mdb-main-label" })
                        @Html.DropDownListFor(
                            x => x.PreProcessingSelection,
                            Model.PreProcessingOptionsDropdown,
                            new { @class = "mdb-select" })
                </div>
            </div>
        </div>
        if (Model.CLA3332_ConsolidatedDataFlows)
        {
            <div class="schemaMapPanel md-form" style="display:none;">
                <h4>Where do you want the data to go?</h4>
                <div id="schemaMapPanel">
                    @Html.EditorForMany(m => m.SchemaMaps, x => x.Index)
                </div>
            </div>
        }
        else
        {
            <div class="schemaMapPanel" style="display:none;">
                <div class="md-form">
                   <h4>Where do you want the data to go?</h4>
                    @if (Model.CLA3332_ConsolidatedDataFlows)
                    {
                        <div id="schemaMapPanel">
                            @Html.EditorForMany(m => m.SchemaMaps, x => x.Index)
                        </div>
                    }
                    else
                    {
                        <div id="schemaMapPanel" class="md-form">
                            @Html.EditorForMany(m => m.SchemaMaps, x => x.Index)
                            <button type="button" id="btnAddSchemaMap" class="btn btn-success"><span>Add Another Target</span></button>
                        </div>
                    }
                </div>
            </div>
        }
        <div class="form-group formSubmitButtons" style="display: none;">
            <div>
                <input type="submit" value="Submit" class="btn btn-primary waves-effect waves-light" />
                <a id="CancelButton" class="btn btn-warning  waves-effect waves-light" href="">Cancel</a>
            </div>
        </div>
    }
</div>
<div id="DatasetFormContainer" style="display: none;">
    <div id="DatasetFormContent"></div>
</div>
<div id="DatasetFileConfigFormContainer" style="display: none;">
    <div id="DatasetFileConfigFormContent"></div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/prettyCron")
    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.css">
    <script src="//cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.js"></script>
    <script type="text/javascript">
        $(function () {
            data.DataFlow.CLA3332_ConsolidatedDataFlows = @Model.CLA3332_ConsolidatedDataFlows.ToString().ToLower();
            data.DataFlow.DataFlowFormInit(@Model.SelectedDataset, @Model.SelectedSchema);

            @if (!Model.CLA3332_ConsolidatedDataFlows) {
                <text>
                //Adding delete button logic here to ensure it is added to
                // any additional schemaMapLineItems that are added
                $(document).on("click", "#btnSchemaMapRemove", function () {
                    if ($('.schemaMapLineItem.active').length === 1) {
                        Sentry.ShowModalAlert("At least one schema mapping is required");
                    }
                    else {
                        var self = $(this);
                        var parentContainer = self.parent(".schemaMapLineItem");
                        var isDeleteHidden = parentContainer.find("[id$=IsDeleted]");
                        //Set hidden value for when object is model is passed back to controller
                        $(isDeleteHidden).val("True");
                        //remove active class from parentcontainer to ensure not counted
                        // when ensuring there is at least one active mapping
                        $(parentContainer).removeClass("active");
                        //Hide parentcontainer to ensure not displayed to user after deletion
                        $(parentContainer).hide();
                    }
                })
                </text>
            }
        });
    </script>
}