@model Sentry.data.Web.SubscriptionModel
@{
    ViewBag.Title = "Subscriptions";
}

@*Attach class to form because Notification.js uses class here to submit form because of quill*@
@using (Html.BeginForm("SubscribeUpdate", "Notification", FormMethod.Post, htmlAttributes: new { @class = "subscribeHeroForm" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    @Html.HiddenFor(model => model.businessAreaID)
    @Html.HiddenFor(model => model.SentryOwnerName)
    @Html.HiddenFor(model => model.group)
    @Html.DisplayFor((model) => ViewData.ModelState)

    

    <table class="table table-striped table-bordered">
        <thead>
            <tr class="table-header">
                <th>Event</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>

            @for (var subId = 0; subId < Model.CurrentSubscriptionsBusinessAreaModels.Count(); subId++)
            {

                @Html.HiddenFor(model => model.CurrentSubscriptionsBusinessAreaModels[subId].BusinessAreaType)
                @Html.HiddenFor(model => model.CurrentSubscriptionsBusinessAreaModels[subId].ID)
                @Html.HiddenFor(model => model.CurrentSubscriptionsBusinessAreaModels[subId].SentryOwnerName)

                string cssClass = "";
                if (Model.CurrentSubscriptionsBusinessAreaModels[subId].Interval.Description.ToLower().Contains("never"))
                {
                    cssClass = "unUsable";
                }
                else
                {
                    cssClass = "active";
                }

                <tr class="@cssClass">





                    @*COLUMN: DisplayName*@
                    @if (Model.CurrentSubscriptionsBusinessAreaModels[subId].Children != null && Model.CurrentSubscriptionsBusinessAreaModels[subId].Children.Count > 0)
                    {
                        //declare this so js can grab values
                        string multiSelectClass = "buford" + Model.CurrentSubscriptionsBusinessAreaModels[subId].EventType.DisplayName.Replace(" ", string.Empty);
                        <td>

                            @Html.HiddenFor(model => model.CurrentSubscriptionsBusinessAreaModels[subId].EventType.Type_ID)
                            @Html.DisplayFor(model => model.CurrentSubscriptionsBusinessAreaModels[subId].EventType.DisplayName)
                            @Html.ListBoxFor(model => model.CurrentSubscriptionsBusinessAreaModels[subId].ChildrenSelections,
                                                new MultiSelectList(Model.CurrentSubscriptionsBusinessAreaModels[subId].AllChildrenSelections, "Value", "Text", Model.CurrentSubscriptionsBusinessAreaModels[subId].ChildrenSelections),
                                                new { @Id = @multiSelectClass, @class = "select-wrapper mdb-select buford-multi-select", multiple = "" })
                        </td>
                    }
                    else
                    {
                        <td>
                            @Html.HiddenFor(model => model.CurrentSubscriptionsBusinessAreaModels[subId].EventType.Type_ID)
                            @Html.DisplayFor(model => model.CurrentSubscriptionsBusinessAreaModels[subId].EventType.DisplayName)
                        </td>
                    }


                    @*COLUMN: Interval_ID SELECTION DROP DOWN*@
                    <td>
                        @*There is something magical about how MVC interprets the model where I have to use model. notation below instead of the foreeach sub.  TODO: is to figure out what is happening behind the scenes*@
                        @Html.DropDownListFor(model => model.CurrentSubscriptionsBusinessAreaModels[subId].Interval.Interval_ID,
                                new SelectList(Model.AllIntervals, "Value", "Text", Model.CurrentSubscriptionsBusinessAreaModels[subId].Interval.Interval_ID),
                                new { @class = "select-wrapper1 mdb-select1 buford-multi-select1" })
                    </td>
                </tr>
            }


        </tbody>
    </table>


    <div class="modal-footer">
        <div style="margin-left: 15px;">

            <!-- Submit button triggers js function -->
            <input type="submit" value="Update Subscriptions" class="btn btn-primary"/>
            <input type="submit" class="btn btn-warning" data-dismiss="modal" value="Cancel" />
        </div>
    </div>

</div>
}