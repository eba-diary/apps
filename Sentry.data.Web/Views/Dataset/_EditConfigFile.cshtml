@model Sentry.data.Web.EditDatasetFileConfigModel
@{
    ViewBag.Title = "Edit Data File Config";
}

@{using (Ajax.BeginForm("ModifyConfigFile", "Dataset",
          new AjaxOptions
          {
              OnSuccess = "data.ManageConfigs.UpdateSuccess",
              OnFailure = "data.ManageConfigs.UpdateFailure"
          },
          new { id = "EditConfigForm" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.DisplayFor((model) => ViewData.ModelState)

            @Html.HiddenFor(model => model.ConfigId, new { @name = "configId" })
            @Html.HiddenFor(model => model.ConfigFileName)
            @Html.HiddenFor(model => model.DatasetFileConfigID)
            @Html.HiddenFor(model => model.DropLocationType)
            @Html.HiddenFor(model => model.DropPath)
            @Html.HiddenFor(model => model.FileTypeId)
            @Html.HiddenFor(model => model.ConfigFileDesc)
            @Html.HiddenFor(model => model.DatasetId)
            @Html.HiddenFor(model => model.ModifyType)
            @{Model.ModifyType = ViewBag.ModifyType;}

            <div class="form-group">
                @Html.LabelFor(m => m.ConfigFileName, htmlAttributes: new { @class = "control-lable col-sm-3" })
                <div class="col-sm-4">
                    @Html.DisplayFor(m => m.ConfigFileName, new { htmlAttributes = new { @class = "from-control-static" } })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ConfigFileDesc, htmlAttributes: new { @class = "control-lable col-sm-3" })
                <div class="col-sm-4">
                    @Html.TextAreaFor(m => m.ConfigFileDesc, new { hmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.SearchCriteria, htmlAttributes: new { @class = "control-lable col-sm-3" })
                <div class="col-sm-9">
                    @Html.EditorFor(m => m.SearchCriteria, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SearchCriteria, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.DropLocationType, htmlAttributes: new { @class = "control-lable col-sm-3" })
                <div class="col-sm-9">
                    @Html.EditorFor(m => m.DropLocationType, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DropLocationType, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.DropPath, htmlAttributes: new { @class = "control-lable col-sm-3" })
                <div class="col-sm-9">
                    @Html.EditorFor(m => m.DropPath, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DropPath, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.TargetFileName, htmlAttributes: new { @class = "control-lable col-sm-3" })
                <div class="col-sm-4">
                    @Html.EditorFor(m => m.TargetFileName, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.IsRegexSearch, htmlAttributes: new { @class = "control-lable col-sm-3" })
                <div class="col-sm-4">
                    @Html.CheckBoxFor(m => m.IsRegexSearch)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.OverwriteDatasetFile, htmlAttributes: new { @class = "control-lable col-sm-3" })
                <div class="col-sm-4">
                    @Html.CheckBoxFor(m => m.OverwriteDatasetFile)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.VersionsToKeep, htmlAttributes: new { @class = "control-lable col-sm-3" })
                <div class="col-sm-4">
                    @Html.EditorFor(m => m.VersionsToKeep, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-offset-4 col-sm-8">
                    <input type="submit" value="Update Config File" class="btn btn-primary" />
                </div>
            </div>
        </div>
    }
}

@section Scripts {
    <script>
        $(function () {
            data.ManageConfigs.EditConfigInit();
        });
    </script>
}
