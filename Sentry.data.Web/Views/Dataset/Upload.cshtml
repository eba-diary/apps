@model UploadDatasetModel
@{
    ViewData["Title"] = "Upload";
}

@*@{
        ViewBag.Title = "EditDatasetDetails";
        Layout = "~/Views/Shared/_Layout.cshtml";
    }*@

<h2>Upload Dataset</h2>
<div></div>

@using (Html.BeginForm( null, null, FormMethod.Post, new { enctype="multipart/form-data"}))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @*<h4>Dataset</h4>*@
        <hr />        
        @Html.HiddenFor(model => model.DatasetId)
        @Html.HiddenFor(model => model.ProgressConnectionId)
        @Html.HiddenFor(model => model.SentryOwnerName)

        @*Show the custom validation summary*@
        @Html.DisplayFor((model) => ViewData.ModelState)

        <div class="form-group">
            <span class="text-muted col-md-10 col-md-offset-2"><em>** All Fields Are Required</em></span>
        </div> 

        <div class="form-group">
            <span class="text-muted col-md-10 col-md-offset-2"><em>** Files larger than 100MB, please contact <a href="mailto:DataArchitecture@Sentry.com?Subject=Dataset%20Management%20-%20Large%20File%20Upload&Body=**Please%20do%20not%20attach%20file**">Data Architecture</a> team</em></span>
        </div>

        <div class="form-group">
            @Html.LabelFor((model) => model.CategoryIDs, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor((model) => model.CategoryIDs, Model.AllCategories, new { @class = "form-control edit-dataset-row" })
                @Html.ValidationMessageFor((model) => model.CategoryIDs, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.S3Key, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.S3Key, new { disabled = "disabled", @readonly = "readonly", @class = "edit-dataset-row" })
                @Html.ValidationMessageFor(model => model.S3Key, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.DatasetFileName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" class="edit-dataset-row file-load" name="DatasetFile" />
                @Html.HiddenFor(model => model.f)
                @*@Html.TextBoxFor(model => model.DatasetName, new { disabled = "disabled", @readonly = "readonly", @class = "edit-dataset-row" })*@
                @Html.ValidationMessageFor(model => model.DatasetFileName, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.DatasetName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DatasetName, new { htmlAttributes = new { @class = "form-control edit-dataset-row" } })
                @Html.ValidationMessageFor(model => model.DatasetName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DatasetDesc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DatasetDesc, new { htmlAttributes = new { @class = "form-control edit-dataset-row" } })
                @Html.ValidationMessageFor(model => model.DatasetDesc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreationUserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreationUserName, new { htmlAttributes = new { @class = "form-control edit-dataset-row" } })
                @Html.ValidationMessageFor(model => model.CreationUserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SentryOwnerName, htmlAttributes: new { @class = "control-label col-md-2"})
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.SentryOwnerName, new { htmlAttributes = new { @class = "form-control edit-dataset-row", @placeholder = "Sentry ID (i.e. 072984)" } })*@
                @Html.Editor("OwnerID", new { htmlAttributes = new { @class = "form-control edit-dataset-row", @placeholder = "Sentry ID (i.e. 072984)" } })
                @*@Html.ValidationMessageFor(model => model.SentryOwnerName, "", new { @class = "text-danger" })*@
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.SentryOwnerName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.SentryOwnerName, new { htmlAttributes = new { @class = "form-control edit-dataset-row", @placeholder = "Sentry ID (i.e. 072984)" } })
                @Html.ValidationMessageFor(model => model.SentryOwnerName, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.UploadUserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.UploadUserName, new { disabled = "disabled", @readonly = "readonly", @class = "edit-dataset-row" })
                @Html.ValidationMessageFor(model => model.UploadUserName, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor((model) => model.OriginationID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.OriginationID, Model.AllOriginationCodes, new { @class = "form-control edit-dataset-row" })
                @*@Html.ValidationMessageFor(model => model.FreqencyID, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DatasetDtm, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DatasetDtm, new { htmlAttributes = new { @class = "form-control edit-dataset-row", @data_provide = "datepicker" } })
                @Html.ValidationMessageFor(model => model.DatasetDtm, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor((model) => model.FreqencyID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.FreqencyID, Model.AllFrequencies, new { @class = "form-control edit-dataset-row" })
                @*@Html.ValidationMessageFor(model => model.FreqencyID, "", new { @class = "text-danger" })*@
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.OriginationCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OriginationCode, new { htmlAttributes = new { @class = "form-control edit-dataset-row" } })
                @Html.ValidationMessageFor(model => model.OriginationCode, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.ChangedDtm, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ChangedDtm, new { disabled = "disabled", @readonly = "readonly", @class = "edit-dataset-row" })
                @Html.ValidationMessageFor(model => model.ChangedDtm, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.UploadDtm, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.UploadDtm, new { disabled = "disabled", @readonly = "readonly", @class = "edit-dataset-row" })
                @Html.ValidationMessageFor(model => model.UploadDtm, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.CreationFreqDesc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreationFreqDesc, new { htmlAttributes = new { @class = "form-control edit-dataset-row" } })
                @Html.ValidationMessageFor(model => model.CreationFreqDesc, "", new { @class = "text-danger" })
            </div>
        </div>*@

            @*<div class="form-group">
                @Html.LabelFor(model => model.FileSize, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.FileSize, new { disabled = "disabled", @readonly = "readonly", @class = "edit-dataset-row" })
                    @Html.ValidationMessageFor(model => model.FileSize, "", new { @class = "text-danger" })
                </div>
            </div>*@

            @*<div class="form-group">
                @Html.LabelFor(model => model.RecordCount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RecordCount, new { htmlAttributes = new { @class = "form-control edit-dataset-row" } })
                    @Html.ValidationMessageFor(model => model.RecordCount, "", new { @class = "text-danger" })
                </div>
            </div>*@

            @*<div class="form-group">
                @Html.LabelFor(model => model.md_Columns, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorForMany(model => model.md_Columns, x => x.DatasetId.ToString(), false)
                    @Html.ValidationMessageFor(model => model.md_Columns, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.md_Metadata, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorForMany(model => model.md_Metadata, x => x.DatasetId.ToString(), false)
                    @Html.ValidationMessageFor(model => model.md_Metadata, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Upload" class="btn btn-default" />
                </div>
            </div>
    </div>
}

@*PROGRESS BAR MODAL*@
<div class="modal fade in" id="mod-progress" data-backdrop="static" data-keyboard="false" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                Upload Progress
            </div>
            <div class="modal-body">
                <div class="text-center">
                    <div class="i-circle warning"><i class="fa fa-info"></i></div>
                    <div id="result" style="font-size: 1.1em; padding-bottom: 5px">
                        <p id="progressBarParagraph"></p>
                        <p id="progressBarPercentage"></p>
                    </div>
                    <div style="width: 30%; margin: 0 auto; display:none;">
                        <div id="progressbar" style="width: 300px; height: 15px"></div>
                        <br />
                    </div>
                    <div id="ProgressStripe" class="progress progress-striped active" style="position:relative; top:10px; width:100%;">
                        <div id="ProgressMessage" class="progress-bar progress-bar-info" style="width: 100%; border:none;"></div>
                    </div>
                    <br />
                </div>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- /.modal -->

@*back buuton to return to original dataset index view
    <div>
    @Html.ActionLink("Back to Dataset", "Index") 
</div>*@

@section Scripts {
    @*@Scripts.Render("~/bundles/jqueryval")*@
    <script>
        $(function () {
            data.Dataset.UploadInit();

            // --- progress bar stuff : start ---
            // Reference the auto-generated proxy for the hub.
            var progress = $.connection.progressHub;
            console.log(progress);

            // Create a function that the hub can call back to display messages.
            progress.client.AddProgress = function (message, percentage) {
                ProgressBarModal("show", message, "Progress: " + percentage);
                $('#ProgressMessage').width(percentage);
                if (percentage == "100%") {
                    ProgressBarModal();
                }
            };

            $.connection.hub.start().done(function () {
                var connectionId = $.connection.hub.id;
                console.log(connectionId);
            });

            // --- progress bar stuff : end ---

        });
    </script>
}
