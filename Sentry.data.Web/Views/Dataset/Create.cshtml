@model CreateDatasetModel
@{
    ViewData["Title"] = "Create Dataset";
}

@*@{
        ViewBag.Title = "EditDatasetDetails";
        Layout = "~/Views/Shared/_Layout.cshtml";
    }*@

<h2>Create Dataset</h2>
<div></div>

@using (Html.BeginForm(null, null, FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @*<h4>Dataset</h4>*@
        <hr />        
        @Html.HiddenFor(model => model.DatasetId)
        @Html.HiddenFor(model => model.SentryOwnerName)

        @*Show the custom validation summary*@
        @Html.DisplayFor((model) => ViewData.ModelState)

        <div class="form-group">
            <span class="text-muted col-md-10 col-md-offset-2"><em>** All Fields Are Required</em></span>
        </div> 

        @*<div class="form-group">
            <span class="text-muted col-md-10 col-md-offset-2"><em>** Files larger than 100MB, please contact <a href="mailto:DataArchitecture@Sentry.com?Subject=Dataset%20Management%20-%20Large%20File%20Upload&Body=**Please%20do%20not%20attach%20file**">Data Architecture</a> team</em></span>
        </div>*@

        <div class="form-group">
            @Html.LabelFor((model) => model.CategoryIDs, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor((model) => model.CategoryIDs, Model.AllCategories, new { @class = "form-control edit-dataset-row" })
                @Html.ValidationMessageFor((model) => model.CategoryIDs, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DatasetName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DatasetName, new { htmlAttributes = new { @class = "form-control edit-dataset-row" } })
                @Html.ValidationMessageFor(model => model.DatasetName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DatasetDesc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DatasetDesc, new { htmlAttributes = new { @class = "form-control edit-dataset-row" } })
                @Html.ValidationMessageFor(model => model.DatasetDesc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreationUserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreationUserName, new { htmlAttributes = new { @class = "form-control edit-dataset-row" } })
                @Html.ValidationMessageFor(model => model.CreationUserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SentryOwnerName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Editor("OwnerID", new { htmlAttributes = new { @class = "form-control edit-dataset-row", @placeholder = "Sentry ID (i.e. 072984)" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor((model) => model.OriginationID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.OriginationID, Model.AllOriginationCodes, new { @class = "form-control edit-dataset-row" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DatasetDtm, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DatasetDtm, new { htmlAttributes = new { @class = "form-control edit-dataset-row", @data_provide = "datepicker" } })
                @Html.ValidationMessageFor(model => model.DatasetDtm, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor((model) => model.FreqencyID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.FreqencyID, Model.AllFrequencies, new { @class = "form-control edit-dataset-row" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor((model) => model.DatasetScopeTypeID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.DatasetScopeTypeID, Model.AllDatasetScopeTypes, new { @class = "form-control edit-dataset-row" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor((model) => model.DatafilesFilesToKeep, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DatafilesFilesToKeep, new { htmlAttributes = new { @class = "col-md-4 form-control edit-dataset-row", @type = "number", @title= "0=Keep All Files\n1=Keep 1 File (Will overwrite existing file)\nn>1=Keep n Files" } })
                @Html.ValidationMessageFor(model => model.DatafilesFilesToKeep, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create Dataset" class="btn btn-default" />
            </div>
        </div>

    </div>
}


@*back buuton to return to original dataset index view
    <div>
    @Html.ActionLink("Back to Dataset", "Index") 
</div>*@

@section Scripts {
    @*@Scripts.Render("~/bundles/jqueryval")*@
    <script>
        $(function () {
            data.Dataset.CreateInit();
        });
    </script>
}
