@model EditDatasetModel
@{
    ViewData["Title"] = "Edit";
}

@*@{
    ViewBag.Title = "EditDatasetDetails";
    Layout = "~/Views/Shared/_Layout.cshtml";
}*@

<h2>Edit Dataset Details</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Dataset</h4>
        <hr />
        @*Show the custom validation summary*@
        @Html.DisplayFor((model) => ViewData.ModelState)
       
        @Html.HiddenFor(model => model.Category)
        @Html.HiddenFor(model => model.S3Key)
        @Html.HiddenFor(model => model.DatasetName)
        @Html.HiddenFor(model => model.UploadUserName)
        @Html.HiddenFor(model => model.ChangedDtm)
        @Html.HiddenFor(model => model.FreqencyID)
        @Html.HiddenFor(model => model.SentryOwnerName)


        <div class="form-group">
                @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <p class="form-control-static">@Html.DisplayFor(model => model.Category)</p>
                    @*@Html.TextBoxFor(model => model.Category, new { @readonly = "readonly", @class = "edit-dataset-row" })*@
                    @*@Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.S3Key, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <p class="form-control-static">@Html.DisplayFor(model => model.S3Key)</p>
                    @*@Html.TextBoxFor(model => model.S3Key, new { disabled = "disabled", @readonly = "readonly", @class = "edit-dataset-row" })*@
                    @*@Html.ValidationMessageFor(model => model.S3Key, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DatasetName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <p class="form-control-static">@Html.DisplayFor(model => model.DatasetName)</p>
                    @*@Html.EditorFor(model => model.DatasetName, new { htmlAttributes = new { @class = "form-control edit-dataset-row" } })
                    @Html.ValidationMessageFor(model => model.DatasetName, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DatasetDesc, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.DatasetDesc, new { htmlAttributes = new { @class = "form-control edit-dataset-row" }, @style = "min-width: 100%; max-width: 100%; width: 100%;" })
                    @Html.ValidationMessageFor(model => model.DatasetDesc, "", new { @class = "text-danger" })
                </div>
            </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DatasetInformation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.DatasetInformation, new { htmlAttributes = new { @class = "form-control edit-dataset-row"}, @style = "min-width: 100%; max-width: 100%; width: 100%;" })
                @Html.ValidationMessageFor(model => model.DatasetInformation, "", new { @class = "text-danger" })
            </div>
        </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CreationUserName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CreationUserName, new { htmlAttributes = new { @class = "form-control edit-dataset-row" } })
                    @Html.ValidationMessageFor(model => model.CreationUserName, "", new { @class = "text-danger" })
                    @*@Html.TextBoxFor(model => model.CreationUserName, new { disabled = "disabled", @readonly = "readonly", @class = "edit-dataset-row" })*@
                    @*@Html.ValidationMessageFor(model => model.CreationUserName, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SentryOwnerName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SentryOwnerName, new { htmlAttributes = new { @id = "OwnerID", @class = "form-control edit-dataset-row", @placeholder = "Sentry ID (i.e. 072984)" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UploadUserName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <p class="form-control-static">@Html.DisplayFor((model) => model.UploadUserName)</p>
                    @*@Html.TextBoxFor(model => model.UploadUserName, new { disabled = "disabled", @readonly = "readonly", @class = "edit-dataset-row" })*@
                    @*@Html.ValidationMessageFor(model => model.UploadUserName, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor((model) => model.OriginationID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.OriginationID, Model.AllOriginationCodes, new { @class = "form-control edit-dataset-row" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DatasetDtm, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DatasetDtm, new { htmlAttributes = new { @class = "form-control edit-dataset-row" } })
                    @Html.ValidationMessageFor(model => model.DatasetDtm, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ChangedDtm, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <p class="form-control-static">@Html.DisplayFor((model) => model.ChangedDtm)</p>
                    @*@Html.TextBoxFor(model => model.ChangedDtm, new { disabled = "disabled", @readonly = "readonly", @class = "edit-dataset-row" })*@
                    @*@Html.ValidationMessageFor(model => model.ChangedDtm, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
</div>
}

<div>
    @Html.ActionLink("Back to Dataset", "Detail", new { id = Model.DatasetId })
</div>

@section Scripts {
    @*@Scripts.Render("~/bundles/jqueryval")*@
    <script>
        $(function () {
            data.Dataset.EditInit();
        });
    </script>
}
