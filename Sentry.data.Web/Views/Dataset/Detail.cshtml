@model Sentry.data.Web.DatasetDetailModel

@{
    ViewBag.Title = "View Dataset Details";
    string color = Model.CategoryColor;
    string headerColor = "categoryBanner-" + Model.CategoryColor;
    var mailTo = "mailto:" + Model.PrimaryContactEmail + "?Subject=Dataset%20Inquiry%20-%20" + Model.DatasetName;
}

@if (@Model.DatasetFileCount == 0)
{
    <div>
        <div id="alertInfoBanner" class="alert alert-dismissable alert-info">
            <button type="button" class="close" data-dismiss="alert">×</button>
            <div>
                @if (Model.Security.CanUploadToDataset)
                {
                    <strong class="alertHeading">Info: </strong>
                    <span>This dataset has no files attached to it yet.  Please click the flashing upload button to upload your first file.</span>
                }
                else
                {
                    <strong class="alertHeading">Info: </strong>
                    <span>This dataset has no files attached to it yet.  Please contact the Sentry Owner: @Model.PrimaryOwnerName</span>
                }
            </div>
        </div>
    </div>
}

<a href="@Url.Action("Datasets", "Search")" class="backToList" id="linkReturnToDatasetList"><span class="glyphicon glyphicon-chevron-left"></span>Back to list</a>

<div style="font-feature-settings: 'lnum';">
    <div class="topBanner" style="height: 60px; margin-top: 20px;border-bottom: 1px #DDDDDD solid;">

        <div class="relative hidden-sm hidden-xs">
            <div>
                <div class="no-overflow">
                    <h1 class="detailName leftFloat @color">
                        @Model.DatasetName

                        @if (Model.IsSecured)
                        {
                            <span class="glyphicon glyphicon-lock lockIcon" data-toggle="tooltip" data-placement="top" title="Secure"></span>
                            <span>
                                <input id="RequestAccessButton" type="button" value="Request Access" class="btn btn-primary" data-id="@Model.DatasetId"
                                       data-toggle="tooltip" data-placement="top" title="Request Access to Dataset" style="margin-left:40px" />
                            </span>
                        }
                    </h1>

                    @if (Model.Security.CanPreviewDataset)
                    {
                        foreach (string item in Model.DistinctFileExtensions)
                        {
                            <div class="extension detailExt bg_gray htCenter ext_@item">@item</div>
                        }


                        <div style="margin-top:-30px;" class="col-md-offset-9 col-md-4 col-lg-offset-10 col-lg-3">

                            <div class="col-md-2 col-lg-2 ">
                                <div class="btn-group dataset-operation-button" data-toggle="tooltip" data-placement="top" title="Favorite">
                                    <button type="button" class="btn btn-default borderdk_gray borderdk_@Model.CategoryColor"
                                            id="btnFavorite" data-id="@Model.DatasetId" data-toggle="tooltip" data-placement="top" title="Favorite">
                                        @if (Model.IsFavorite)
                                        {
                                            <span class="glyphicon glyphicon-star @Model.CategoryColor" id="favoriteIcon"></span>
                                        }
                                        else
                                        {
                                            <span class="glyphicon glyphicon-star-empty @Model.CategoryColor" id="favoriteIcon"></span>
                                        }
                                    </button>
                                </div>
                            </div>

                            @if (Model.Security.CanUploadToDataset)
                            {
                                <div class="col-md-2 col-lg-2 ">
                                    <button type="button"
                                            class="btn btn-default dataset-operation-button borderdk_gray borderdk_@color"
                                            id="UploadModal" data-id="@Model.DatasetId" data-toggle="tooltip" data-placement="top" title="Upload File">
                                        <span class="glyphicon glyphicon-cloud-upload @color"></span>
                                    </button>
                                </div>
                            }
                            @if (Model.Security.CanEditDataset)
                            {
                                <div class="col-md-2 col-lg-2">
                                    <button type="button"
                                            class="btn btn-default btn dataset-operation-button borderdk_gray borderdk_@color"
                                            id="EditDataset_@Model.DatasetId" data-id="@Model.DatasetId" data-toggle="tooltip" data-placement="top" title="Edit Dataset">
                                        <span class="glyphicon glyphicon-edit @color"></span>
                                    </button>
                                </div>
                            }
                            <div class="col-md-2 col-lg-2">
                                <div class="btn-group dataset-operation-button" data-toggle="tooltip" data-placement="top" title="Additional Actions">

                                    <button type="button"
                                            class="btn btn-default borderdk_gray borderdk_@color dropdown"
                                            data-toggle="dropdown">
                                        <span class="glyphicon glyphicon-menu-hamburger @color"></span>
                                    </button>
                                    <ul class="dropdown-menu" x-placement="bottom-start" style="position: absolute; transform: translate3d(0px, 50px, 0px); top: -10px; left: 0px; will-change: transform;">
                                        @if (Model.Security.CanEditDataset)
                                        {
                                            <li>
                                                <a href="/Config/Dataset/@Model.DatasetId">Manage Schemas</a>
                                                <a class="btn" id="btnSyncConsumptionLayers" data-id="@Model.DatasetId" style="text-align: left">Sync All Consumption Layers</a>
                                                <a class="btn" id="btnDeleteDataset" data-id="@Model.DatasetId" data-grpCnt="@Model.GroupAccessCount" data-IsSecured="@Model.IsSecured" style="text-align: left">Delete Dataset</a>
                                            </li>
                                        }
                                        @if (Model.Security.CanQueryDataset)
                                        {
                                            <li title="Query Dataset">
                                                <a href="/Dataset/QueryTool?DatasetID=@Model.DatasetId">
                                                    Query this Dataset
                                                </a>
                                            </li>
                                        }
                                        <li>
                                            <a href="@Model.MailtoLink">Share Dataset</a>
                                        </li>
                                        @if (Model.Security.CanViewFullDataset)
                                        {
                                            <li id="SubscribeModal" style="cursor: pointer;" data-id="@Model.DatasetId" data-placement="top" title="Subscribe">
                                                <a>
                                                    Subscribe
                                                </a>
                                            </li>
                                        }
                                    </ul>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <br />

    <div class="row" style="margin-top: 15px;">
        <div class="col-lg-12">
            <div class="row">
                <div class="col-lg-8 col-sm-6">
                    <div style="margin-top: 15px;">
                        @if (!String.IsNullOrWhiteSpace(Model.DatasetDesc))
                        {
                            <div class="row">
                                <div class="col-lg-12">
                                    <div>
                                        <h6 class="@color">Description:</h6><br />
                                        @if (Model.DatasetDesc.Length >= 500)
                                        {

                                            int last = Model.DatasetDesc.Substring(0, 500).LastIndexOf(" ");
                                            <p class="spanContainer">
                                                <span style="margin-top: 15px;">@Model.DatasetDesc.Substring(0, last)</span>
                                                <span id="descSeeMoreEllipsis">...&nbsp;</span>
                                                <span id="descSeeMorePanel" style="display: none;">@Model.DatasetDesc.Substring(last) </span>
                                                <span id="descSeeMoreButton" style="cursor: pointer;"><a onclick="$('#descSeeMorePanel').show(); $(this).parent().hide(); $('#descShowLessButton').show(); $('#descSeeMoreEllipsis').hide();">See More</a></span>
                                                <span id="descShowLessButton" style="cursor: pointer; display:none;"><a onclick="$('#descSeeMorePanel').hide(); $(this).parent().hide(); $('#descSeeMoreButton').show(); $('#descSeeMoreEllipsis').show();">Show Less</a></span>
                                            </p>
                                        }
                                        else
                                        {
                                            <p>@Model.DatasetDesc</p>
                                        }
                                    </div>
                                </div>
                            </div>
                            <br />
                        }

                        @if (!String.IsNullOrWhiteSpace(Model.DatasetInformation) && Model.Security.CanPreviewDataset)
                        {
                            <div class="row">
                                <div class="col-lg-12">
                                    <div class="spanContainer">
                                        <h6 class="@color">Usage Information:</h6><br />
                                        @if (Model.DatasetInformation.Length >= 300)
                                        {

                                            int lastInfo = Model.DatasetInformation.Substring(0, 300).LastIndexOf(" ");
                                            <span style="margin-top: 15px;">@Model.DatasetInformation.Substring(0, lastInfo)</span>
                                            <span id="usageSeeMoreEllipsis">...&nbsp;</span>
                                            <span id="usageSeeMorePanel" style="display: none;">@Model.DatasetInformation.Substring(lastInfo)</span>
                                            <span id="usageSeeMoreButton" style="cursor: pointer;"><a onclick="$('#usageSeeMorePanel').show(); $(this).parent().hide(); $('#usageShowLessButton').show(); $('#usageSeeMoreEllipsis').hide();">See More</a></span>
                                            <span id="usageShowLessButton" style="cursor: pointer; display:none;"><a onclick="$('#usageSeeMorePanel').hide(); $(this).parent().hide(); $('#usageSeeMoreButton').show(); $('#usageSeeMoreEllipsis').show();">Show Less</a></span>
                                        }
                                        else
                                        {
                                            <span style="margin-top: 15px;">@Model.DatasetInformation</span>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    @if (Model.Security.CanPreviewDataset)
                    {
                        <hr />
                        <div>
                            <h3 class="@color">
                                Schemas
                            </h3>
                        </div>

                        <div>
                            <div class="row">
                                <div class="col-lg-12" style="margin-left: 20px; margin-top: 10px;">
                                    <select class="form-control" style="margin:1em !important;"
                                            id="datasetConfigList" name="filterSelector">
                                        @foreach (var a in Model.DatasetFileConfigNames)
                                        {
                                            <option value="@a.Key">@a.Value</option>
                                        }
                                    </select>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-lg-12">
                                    <br />
                                    <div style="margin-left: 35px;" data-bind="visible: Description() != null" class="spanContainer">
                                        <h6 class="@color">Schema Description:</h6><br />
                                        <span style="margin-top: 15px;" data-bind="text: LessDescription"></span>
                                        <span id="schemaHasMoreDescription">
                                            <span id="schemaSeeMoreEllipsis">&nbsp;...</span>
                                            <span id="schemaSeeMorePanel" style="display: none; padding-left: 4px;" data-bind="text: MoreDescription"></span>
                                            <span id="schemaSeeMoreButton" style="cursor: pointer;"><a onclick="$('#schemaSeeMorePanel').show(); $(this).parent().hide(); $('#schemaShowLessButton').show(); $('#schemaSeeMoreEllipsis').hide();">See More</a></span>
                                            <span id="schemaShowLessButton" style="cursor: pointer; display:none;"><a onclick="$('#schemaSeeMorePanel').hide(); $(this).parent().hide(); $('#schemaSeeMoreButton').show(); $('#schemaSeeMoreEllipsis').show();">Show Less</a></span>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <div class="col-lg-4">
                    <div class="row" style="border: 1px #DDDDDD solid; background: white; padding: 20px;">

                        <div class="row" style="min-height: 60px;">
                            <div class="col-lg-6">
                                <h5 class="@color">Last Activity Date</h5>
                                <h6 class="@color">@Model.ChangedDtm.ToString("MMMM d, yyyy")</h6>
                            </div>
                            <div class="col-lg-6">
                                <h5 class="@color">Date Created</h5>
                                <h6 class="@color">@Model.DatasetDtm.ToString("MMMM d, yyyy")</h6>
                            </div>
                        </div>
                        <hr />
                        <div class="row">
                            <div class="col-lg-6">
                                <h5 class="@color">Owner</h5>
                                <h6 class="@color">@Model.PrimaryOwnerName</h6>
                            </div>
                            <div class="col-lg-6">
                                <h5 class="@color">Contact</h5>
                                <h6 class="@color"><a href="@mailTo">@Model.PrimaryContactName</a></h6>
                            </div>
                        </div>
                        <hr />

                        <div class="row">
                            <div class="col-lg-12">
                                <h5 class="@color">Data Classification</h5>
                                <h6 class="@color">@Model.DataClassificationDescription</h6>
                            </div>
                        </div>
                        <hr />

                        <div class="row">
                            <div class="col-lg-6">
                                <h5 class="@color">Dataset Views</h5>
                                <h6 class="@color" style="font-feature-settings: 'lnum';">@Model.Views</h6>
                            </div>
                            <div class="col-lg-6">
                                <h5 class="@color">Dataset Downloads</h5>
                                <h6 class="@color" style="font-feature-settings: 'lnum';">@Model.Downloads</h6>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>

    <hr />

    @if (Model.Security.CanPreviewDataset)
    {
        <div class="row">
            <div class="col-lg-12">
                <div id="aboutThisSchema" class="metadataHeader">
                    <h3 class="@color">About this Schema</h3>
                </div>
                <div class="metadataBody container row" style="border: 1px #DDDDDD solid; background: white; padding: 10px;">
                    <div class="col-lg-4">
                        <div class="row">
                            <div class="col-lg-12">
                                <h5 class="@color">Last Updated:</h5>
                            </div>
                        </div>
                        <div class="row" style="margin-bottom:15px;">
                            <div class="col-lg-6">
                                <h5 class="@color">Data</h5>
                                <h6 class="@color" data-bind="text: DataLastUpdated"></h6>
                                <p id="dataLastUpdatedSpinner" class="mini-sentry-spinner-container sentry-spinner-container">
                                    <span class="sentry-spinner" style="background-size: 25px 25px; margin-left: 290px;"></span>
                                </p>
                            </div>
                            <div class="col-lg-6">
                                <h5 class="@color">Metadata</h5>
                                <h6 class="@color" data-bind="text: MetadataLastDT"></h6>
                                <p id="sessionSpinner" class="mini-sentry-spinner-container sentry-spinner-container">
                                    <span class="sentry-spinner" style="background-size: 25px 25px; margin-left: 290px;"></span>
                                </p>
                            </div>
                        </div>

                        <div class="row" data-bind="visible: SchemaRows().length > 0">
                            <hr />
                            <div class="col-lg-12">
                                <h5 class="@color">In this Schema:</h5>
                            </div>
                        </div>

                        <div class="row" data-bind="visible: SchemaRows().length > 0">
                            <div class="col-lg-6">
                                <h5 class="@color">Rows</h5>
                                <h6 class="@color" id="rowCount" data-bind="text: RowCount"></h6>
                            </div>
                            <div class="col-lg-6">
                                <h5 class="@color">Columns</h5>
                                <h6 class="@color" data-bind="text: SchemaRows().length"></h6>
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-8">
                        <h5 class="@color">Data Ownership:</h5>
                        <table class="table table-striped table-hover detailTable" style="margin-left: 0px;">
                            <tbody>
                                <tr class="borderMeta_@color">
                                    <td class="borderMeta_@color colOneMeta">Dataset Creator</td>
                                    <td class="borderMeta_@color">@Model.CreationUserName</td>
                                </tr>
                                <tr class="borderMeta_@color">
                                    <td class="borderMeta_@color colOneMeta">Dataset Origination</td>
                                    <td class="borderMeta_@color">@Model.OriginationCode</td>
                                </tr>
                            </tbody>
                        </table>
                        <br />
                        <div>
                            <h5 class="@color">Refresh Frequency:</h5>
                            <table class="table table-striped table-hover detailTable" style="margin-left: 0px;">
                                <tbody>
                                    <tr>
                                        <td class="borderMeta_@color colOneMeta">Dataset Scope Type</td>
                                        <td class="borderMeta_@color ">
                                            @foreach (var dst in @Model.DatasetScopeTypeNames)
                                            {
                                                <span class="comma" title='@dst.Value'>@dst.Key</span>
                                            }
                                        </td>
                                        <td class="borderMeta_@color"></td>
                                    </tr>

                                    <tr data-bind="if: DFSDropLocation(), visible: DFSDropLocation != undefined" style="display:none;">
                                        <td class="borderMeta_@color colOneMeta">DFS Drop Location</td>
                                        <td class="borderMeta_@color" data-bind="text: DFSDropLocation().Location()"></td>
                                    </tr>

                                    <tr data-bind="if: S3DropLocation(), visible: S3DropLocation != undefined" style="display:none;">
                                        <td class="borderMeta_@color colOneMeta">S3 Drop Location</td>
                                        <td class="borderMeta_@color" data-bind="text: S3DropLocation().Location()"></td>
                                    </tr>

                                    <!-- ko if: OtherJobs != undefined-->
                                    <!-- ko foreach: OtherJobs -->
                                    <tr>
                                        <td class="borderMeta_@color colOneMeta" data-bind="text: Name()"></td>
                                        @if (Model.Security.CanEditDataset)
                                        {
                                            <!-- ko if: IsEnabled-->
                                            <td class="borderMeta_@color" data-bind="text: Location()"></td>
                                            <td class="borderMeta_@color">
                                                <button style="float:right; margin-left: 30px;" class="btn btn-default on-demand-run" data-bind="attr: { id: JobId }">On-Demand Run</button>
                                                <button style="float:right; margin-left: 30px;" class="btn btn-default jobstatus jobstatus_enabled" data-bind="attr: { id: JobId }">Disable</button>
                                            </td>
                                            <!-- /ko -->
                                            <!-- ko ifnot: IsEnabled-->
                                            <td class="borderMeta_@color"> Disabled</td>
                                            <td class="borderMeta_@color">
                                                <button style="float:right; margin-left: 30px;" class="btn btn-default on-demand-run" disabled="disabled" data-toggle="tooltip" data-placement="top" title="Job is disabled" data-bind="attr: { id: JobId }">On-Demand Run</button>
                                                <button style="float:right; margin-left: 30px;" class="btn btn-default jobstatus jobstatus_disabled" data-bind="attr: { id: JobId }">Enable</button>
                                            </td>
                                            <!-- /ko -->
                                        }
                                        else
                                        {
                                            <td class="borderMeta_@color"></td>
                                        }

                                    </tr>
                                    <!-- /ko -->
                                    <!-- /ko -->

                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    @if (Model.Security.CanPreviewDataset)
    {
        <div class="row" id="schemaSection">

            <div class="col-lg-12">
                <hr />
                <section class="landing-page-section schema-preview">
                    <div id="columnsInThisSchema">
                        <h3 class="detailSection @color">Columns</h3>
                    </div>
                    <div class="section-content collapsed" id="hide_detailSectionHeader_Columns">
                        <div class="table-wrapper">
                            <table class="table table-bordered table-striped schema-table">
                                <thead>
                                    <tr class="@headerColor">
                                        <th scope="col" style="width: 35%;" class="column-type">Column Name</th>
                                        <th scope="col" class="column-type">Description</th>
                                        <th scope="col" class="column-type">Type</th>
                                        <th scope="col" style="width: 10%;" class="column-type">Precision</th>
                                        <th scope="col" style="width: 10%;" class="column-type">Scale</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <!-- ko foreach: SchemaRows -->
                                    <tr class="SchemaRow" data-column="equip_id" aria-expanded="false" aria-haspopup="true" role="link" tabindex="0"
                                        data-bind="css: { odd: ($index() % 2 === 1), even: ($index() % 2 === 0), extra: ($index() >= 10)}, visible: ($index() < 10)">
                                        <td class="column-name @color" scope="row" data-bind="text : Name"></td>
                                        <td class="column-description">
                                            <div class="contents clamped">
                                                <span class="Linkify" data-bind="text : Description"></span>
                                            </div>
                                        </td>
                                        <td class="column-type">
                                            <div>
                                                <span class="type-name" data-name="text" data-bind="text : Type"></span>
                                            </div>
                                        </td>
                                        <td class="column-type">
                                            <div>
                                                <span class="type-name" data-name="text" data-bind="text : Precision"></span>
                                            </div>
                                        </td>
                                        <td class="column-type">
                                            <div>
                                                <span class="type-name" data-name="text" data-bind="text : Scale"></span>
                                            </div>
                                        </td>
                                    </tr>
                                    <!-- /ko -->
                                </tbody>
                            </table>
                        </div>
                        <div data-bind="if: FooterRow()">
                            <div style="float: right;">
                                <a onclick="$('.extra').toggle();">
                                    <span>Show</span>
                                    <span class="extra">More</span>
                                    <span class="extra" style="display: none;">Less</span>
                                    <span> (</span>

                                    <span data-bind="text: SchemaRows().length"></span>
                                    <span>)</span>
                                </a>
                            </div>
                        </div>
                        <div id="panelSpinner" style="min-height: 150px;">
                            <div class="sentry-spinner-container" style=" width: 1166px; margin-top: 25px;">
                                <span class="sentry-spinner" style="height:100px"></span>
                            </div>
                        </div>
                    </div>
                </section>
            </div>
            <br />
        </div>
    }

    @if (Model.Security.CanViewFullDataset)
    {
        <hr id="schemaHR" />

        <div data-bind="visible: DataLoading() == true && DataTableExists() == true" style="display: none;">
            <div class="row">
                <div class="col-lg-12">
                    <div>
                        <h3 class="@color">Data Preview (Top 20 Rows)</h3>
                    </div>
                </div>
            </div>
            <div class="row" style="height: 150px;">
                <div class="col-lg-12">
                    <div>
                        <p id="dataSpinner" class="mini-sentry-spinner-container sentry-spinner-container" style="margin-left: 0; margin-top: 50px;">
                            <span class="sentry-spinner"></span>
                        </p>
                    </div>
                </div>
            </div>
        </div>
        <div id="dataSection" data-bind="visible: DataLoading() == false  && DataTableExists() == true" style="display: none;">
            <div class="row">
                <div class="col-lg-12">
                    <div>
                        <h3 class="@color">Data Preview (Top 20 Rows)</h3>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12">
                    <table class="table table-striped table-bordered @color" id="datasetRowTable">
                        <thead>
                            <tr id="tableFirstRow" class="filter-row"></tr>
                            <tr id="tableColumnIDs" class="table-header table-header_@color @headerColor"></tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
                <hr />
            </div>
        </div>
    }

    @if (Model.Security.CanViewFullDataset)
    {
        <div class="row">
            <div class="col-lg-12">
                <div data-bind="visible: ShowDataFileTable() == true" style="display: none;">
                    <div>
                        <h3 class="@color">Data Files</h3>
                    </div>
                    <div id="hide_detailSectionHeader_DataFiles">
                        <table class="table table-striped table-bordered @color" id="datasetFilesTable">
                            <thead>
                                <tr class="filter-row">
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td id="configFilterName"></td>
                                </tr>
                                <tr class="table-header_@color @headerColor">
                                    <th>Details</th>
                                    <th>Actions</th>
                                    <th>Name</th>
                                    <th>Upload User Name</th>
                                    <th>Initial Upload Date</th>
                                    <th>Modified Date</th>
                                    <th>Schema</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/prettyCron")
    @Scripts.Render("~/bundles/dataTables")

    <script>

        $(function () {
            data.Dataset.DetailInit();
        });

        var table;
        //used to abort ajax request incase addition calls are made before original call is received
        var schemaAjaxReq;
        //used to abort ajax request incase addition calls are made before original call is received
        var dataAjaxReq;

        function renderTable(input, push) {
            var filters = input.split("\n");

            if (filters[0].startsWith("+-")) {

                if (table) {
                    table.destroy();
                }
                //Column information
                var columns = filters[1].split('|');
                var parsedColumns = [];
                var nullColumns = [];

                $('#tableColumnIDs').empty();
                $('#tableFirstRow').empty();
                $('#datasetRowTable tbody').empty();

                for (var i = 1; i < columns.length; i++) {
                    if (columns[i]) {
                        nullColumns.push(null);
                        parsedColumns.push({ 'title': columns[i].trim(), 'width': "auto" });
                        $('#tableColumnIDs').append("<th>" + columns[i].trim() + "</th>");
                        $('#tableFirstRow').append("<td></td>");
                    }
                }

                var parsedRows = [];
                //Data for Each Row in the Result Set
                for (var i = 3; i < filters.length; i++) {

                    if (!filters[i].startsWith("+-")) {

                        var cells = filters[i].split('|');
                        var parsedCells = [];
                        cells.splice(0, 1);
                        cells.splice(cells.length, 1);
                        for (var j = 0; j < cells.length - 1; j++) {
                            parsedCells.push(cells[j].trim());
                        }

                        if (parsedCells.length >= 1) {
                            parsedRows.push(parsedCells);
                        }
                    }
                }

                if (!push) {
                    table = $('#datasetRowTable').DataTable({
                        "scrollX": true,
                        data: parsedRows,
                        columns: parsedColumns,
                    });
                } else {
                    table = $('#datasetRowTable').DataTable({ "scrollX": true }).rows.add(parsedRows).draw();
                    $($('#datasetRowTable_info').children()[2]).text($('#rowCount').text());
                }

                $(".dataTables_filter").parent().addClass("text-right");
            }
        }

        var getUrlParameter = function getUrlParameter(sParam) {
            var sPageURL = decodeURIComponent(window.location.search.substring(1)),
                sURLVariables = sPageURL.split('&'),
                sParameterName,
                i;

            for (i = 0; i < sURLVariables.length; i++) {
                sParameterName = sURLVariables[i].split('=');

                if (sParameterName[0] === sParam) {
                    return sParameterName[1] === undefined ? true : sParameterName[1];
                }
            }
        };

        function SchemaRow(data) {
            this.Name = ko.observable(data.Name);
            this.Description = ko.observable(data.Description);
            this.Type = ko.observable(data.Type);
            this.Precision = ko.observable(data.Precision);
            this.Scale = ko.observable(data.Scale);
            this.LastUpdated = ko.observable(data.LastUpdated);
        }

        function DropLocation(data) {
            this.Name = ko.observable(data.Name);
            this.Location = ko.observable('Next Processing Time is ' + prettyCron.getNext(data.Location));
            this.JobId = ko.observable(data.JobId);
            this.IsEnabled = ko.observable(data.IsEnabled);
        }

        function ViewModel() {
            var self = this;

            self.NoColumnsReturned = ko.observable();
            self.DataLoading = ko.observable(false);
            self.DataTableExists = ko.observable(false);
            self.RowCount = ko.observableArray();
            self.SchemaRows = ko.observableArray();
            self.DataLastUpdated = ko.observable();
            self.Description = ko.observable();
            self.LessDescription = ko.computed(function () {
                if (self.Description() != null && self.Description().length > 300) {

                    var last = self.Description().substring(0, 300).lastIndexOf(" ");

                    $('#schemaHasMoreDescription').show();
                    return self.Description().substring(0, last);
                } else {
                    $('#schemaHasMoreDescription').hide();
                    return self.Description();
                }
            });

            self.MoreDescription = ko.computed(function () {
                if (self.Description() != null && self.Description().length > 300) {
                    $('#schemaHasMoreDescription').show();
                    var last = self.Description().substring(0, 300).lastIndexOf(" ");

                    return " " + self.Description().substring(last);
                } else {
                    $('#schemaHasMoreDescription').hide();
                    return '';
                }
            });

            self.DFSDropLocation = ko.observable();
            self.S3DropLocation = ko.observable();
            self.OtherJobs = ko.observableArray();
            self.DFSCronJob = ko.observable();
            self.S3CronJob = ko.observable();
            self.CronJobs = ko.observableArray();
            self.Views = ko.observable();
            self.Downloads = ko.observable();
            self.ShowDataFileTable = ko.computed(function () {
                if (self.DataLastUpdated() === 'No Data Files Exist') {
                    return false;
                } else {
                    return true;
                }
            });

            self.FooterRow = ko.computed(function () {
                if (self.SchemaRows().length > 10) {
                    return true;
                } else {
                    return false;
                }
            });

            self.MetadataLastDT = ko.computed(function () {
                if (self.SchemaRows().length >= 1) {
                    var d = new Date("September 13, 1989 12:15:00");

                    ko.utils.arrayForEach(self.SchemaRows(), function (feature) {
                        var f = new Date(feature.LastUpdated());
                        if (f > d) { d = f }
                    });
                    d = d.toLocaleString("en-us", { month: "long" }) + ' ' + d.getDate() + ', ' + d.getFullYear();
                    $('#sessionSpinner').hide();
                    return d;
                }
                else if (self.NoColumnsReturned()) {
                    $('#sessionSpinner').hide();
                    return "No Columns Exist";
                }
                else {
                    $('#sessionSpinner').show();
                }
            });

            self.AnyLastUpdated = ko.computed(function () {
                var d1 = Date.parse(self.DataLastUpdated());
                var d2 = Date.parse(self.MetadataLastDT());

                if (!isNaN(d1) && !isNaN(d2)) {

                    var d1 = new Date(d1);
                    var d2 = new Date(d2);
                    $('#updatedSpinner').hide();
                    if (d1 > d2) {
                        return d1.toLocaleString("en-us", { month: "long" }) + ' ' + d1.getDate() + ', ' + d1.getFullYear();
                    } else {
                        return d2.toLocaleString("en-us", { month: "long" }) + ' ' + d2.getDate() + ', ' + d2.getFullYear();
                    }
                }
                else if (!isNaN(d1) && isNaN(d2)) {
                    $('#updatedSpinner').hide();
                    var d1 = new Date(d1);
                    return d1.toLocaleString("en-us", { month: "long" }) + ' ' + d1.getDate() + ', ' + d1.getFullYear();
                }
                else if (isNaN(d1) && !isNaN(d2)) {
                    $('#updatedSpinner').hide();
                    var d2 = new Date(d2);
                    return d2.toLocaleString("en-us", { month: "long" }) + ' ' + d2.getDate() + ', ' + d2.getFullYear();
                }
                else if (self.DataLastUpdated() === 'No Data Files Exist' && self.MetadataLastDT() === 'No Columns Exist') {
                    $('#updatedSpinner').hide();
                    return $('#datasetInfoLastUpdated').text();
                }
            });

            $('#datasetConfigList').on('select2:select', function (e) {

                window.history.pushState('Config Changed', 'Title', '?configID=' + $('#datasetConfigList').val());

                Id = $('#datasetConfigList').val();

                self.NoColumnsReturned(false);
                $('#schemaSection').show();
                $('#schemaHR').show();

                $('#panelSpinner').show();
                self.SchemaRows.removeAll();
                console.log($('#datasetConfigList').val());
                var fileInfoURL = "/Dataset/GetDatasetFileInfoForGrid/?Id=" + $('#datasetConfigList').val();
                $('#datasetFilesTable').DataTable().ajax.url(fileInfoURL).load();

                UpdateMetadata();

                UpdateColumnSchema();
            });

            $('#dataLastUpdatedSpinner').show();
            UpdateMetadata();

            $('#panelSpinner').show();
            UpdateColumnSchema();


            function UpdateMetadata() {
                if (!isNaN(getUrlParameter('configID'))) {
                    $('#datasetConfigList').val(getUrlParameter('configID')).trigger('change');
                }

                if ($('#datasetConfigList').val() === undefined) { return; }

                var metadataURL = "/api/v1/metadata/datasets/" + $('#datasetConfigList').val();
                $.get(metadataURL, function (result) {
                    self.Downloads(result.Downloads);
                    self.Views(result.Views);
                    self.Description(result.Description);

                    self.OtherJobs.removeAll();
                    $.each(result.OtherJobs, function (i, val) {
                        var item = new DropLocation(val);

                        self.OtherJobs().push(item);
                    });
                    self.OtherJobs.notifySubscribers();

                    var d = new Date(result.DataLastUpdated);
                    if (d < new Date('1990-01-01')) {
                        self.DataLastUpdated('No Data Files Exist');
                    } else {
                        d = d.toLocaleString("en-us", { month: "long" }) + ' ' + d.getDate() + ', ' + d.getFullYear();
                        self.DataLastUpdated(d);
                    }
                    $('#dataLastUpdatedSpinner').hide();
                });
            }

            function UpdateColumnSchema() {
                if ($('#datasetConfigList').val() === undefined) { return;}

                var schemaURL = "/api/v1/metadata/datasets/" + $('#datasetConfigList').val() + "/schemas/0/columns";
                var hiveTableURL = "/api/v1/metadata/datasets/" + $('#datasetConfigList').val() + "/schemas/0/hive";

                self.DataLoading(true);
                $('#dataSection').hide();

                $.get(hiveTableURL, function (result) {
                    //logic to aboart ajax call additional call is triggered before original call finished.
                    //https://stackoverflow.com/a/4551178
                    if (dataAjaxReq && dataAjaxReq.readyState != 4) {
                        dataAjaxReq.abort()
                    }

                    dataAjaxReq = $.ajax({
                        type: "GET",
                        url: "/api/v1/queryTool/sessions/primary",
                        dataType: "json",
                        success: function (msg) {
                            var getHiveTableUrl = "/api/v1/queryTool/sessions/" + msg.id + "/hives/" + result.HiveDatabaseName + "/" + result.HiveTableName + "/" + $('#datasetConfigList').val() + "/20/0";
                            $.get(getHiveTableUrl, function (result2) {
                                $('#dataSection').hide();
                                console.log('found a table');

                                renderTable(result2, false);

                                $('#dataSection').show();
                                self.DataLoading(false);
                                self.DataTableExists(true);

                                $("#datasetRowTable").dataTable().fnAdjustColumnSizing();

                            }).fail(function () {
                                $('#dataSection').hide();
                                console.log('This hide data section: 3');
                                self.DataLoading(false);
                                self.DataTableExists(false);
                                self.DataLoading.notifySubscribers();
                            });
                        },
                        error: function (error) {
                            $('#dataSection').hide();
                            console.log('This hide data section: 1');
                            self.DataLoading(false);
                            self.DataTableExists(false);
                            self.DataLoading.notifySubscribers();
                        }
                    });
                }).fail(function () {
                    $('#dataSection').hide();
                    console.log('This hide data section: 2');
                    self.DataLoading(false);
                    self.DataTableExists(false);
                    self.DataLoading.notifySubscribers();
                });

                //logic to aboart ajax call additional call is triggered before original call finished.
                //https://stackoverflow.com/a/4551178
                if (schemaAjaxReq && schemaAjaxReq.readyState != 4) {
                    schemaAjaxReq.abort()
                }
                schemaAjaxReq = $.get(schemaURL, function (result) {
                    if (result.RowCount) {
                        self.RowCount(result.RowCount.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ","));
                    } else {
                        self.RowCount(0);
                    }

                    if (result.rows.length == 0) {
                        self.NoColumnsReturned(true);
                        $('#schemaSection').hide();
                        $('#schemaHR').hide();
                    }
                    else {
                        self.NoColumnsReturned(false);
                        $('#schemaSection').show();
                        $('#schemaHR').show();

                        $.each(result.rows, function (i, val) {
                            var item = new SchemaRow(val);

                            self.SchemaRows().push(item);
                        });
                        self.SchemaRows.notifySubscribers();
                    }
                    $('#panelSpinner').hide();

                }).fail(function () {
                    self.RowCount(0);
                    self.SchemaRows([]);

                    self.NoColumnsReturned(true);
                    $('#panelSpinner').hide();
                    $('#schemaSection').hide();
                    $('#schemaHR').hide();
                });
            }
        };

        vm = new ViewModel();
        ko.applyBindings(vm);

    </script>
}