@model ListDatasetModel

@{
    ViewBag.Title = "Datasets";
}

@*This would be to put the filters in a side menu that is off the page and would be used on smaller screens*@
@*<div id="mySidenav" class="sidenav">
    <a href="javascript:void(0)" class="closebtn" onclick="closeNav()">&times;</a>
    @using (Html.BeginForm(@"List", "Dataset", FormMethod.Get, new { @class = "navbar-form navbar-center", @id = "DatasetListSearch" }))
    {
        @Html.Partial("_SearchFilters", Model)
    }
</div>*@

<!-- Use any element to open the sidenav -->
@*<span onclick="openNav()">open</span>*@

<div id="main">
    <div class="col-md-3 textCenter">
        <div class="listHeadGroup">
            <img src="~/Images/Icons/DatasetsBlue.svg" class="datasetImg leftFloat" />
            <h1 class="htCenter datasetHeader">Datasets</h1>
        </div>
    </div>

    @{
        using (Html.BeginForm(@"List", "Dataset", FormMethod.Post, new { @class = "navbar-form navbar-center", @id = "DatasetListSearch" }))
        {
            @Html.AntiForgeryToken()

            <div class="col-md-9 textCenter">
                <div class="searchBoxDS">
                    @Html.EditorFor(model => model.SearchText, new { htmlAttributes = new { @class = "form-control searchTextDS",
                        @placeholder = "Search " + Model.DatasetList.Count() + " Datasets" } })
                    <button class="btn btn-primary searchBtn" onclick="return false;"><span class="glyphicon glyphicon-search"></span></button>
                </div>
            </div>

            <div class="col-sm-3 clearFloat no-padding hidden-sm hidden-xs">
                <div class="outsideFilters" id="outsideFilters">
                    @{
                        SearchFilterModel sfm = new SearchFilterModel();
                        sfm.SearchFilters = Model.SearchFilters;
                        @Html.Partial("_SearchFilters", sfm);
                    }
                </div>
            </div>

            @* Main Content *@
            <div class="col-md-9 textCenter">
                <div id="DatasetItemList" class="dataset-list inlineBlock text-left">
                    <div>
                        <h4 class="found">
                            Active Filters:
                            <button type="button" class="btn btn-sm btn-info" id="btnClearFilters">Clear Filters</button>
                        </h4>
                        <select multiple="" class="form-control select2-hidden-accessible"
                                id="filterSelector" name="filterSelector" tabindex="-1" aria-hidden="true">
                            @{
                                int i = 0;
                                foreach (var category in Model.SearchFilters)
                                {
                                    string catName = category.FilterType.Split(' ').First();
                                    <optgroup label="@Model.SearchFilters[i].FilterType">
                                        @{
                                            for (int t = 0; t < category.FilterNameList.Count; t++)
                                            {
                                                string val = @i + "_" + @Model.SearchFilters[i].FilterNameList[t].id;
                                                FilterNameModel filter = @category.FilterNameList[t];
                                                <option value="@val">@Model.SearchFilters[i].FilterNameList[t].value</option>


                                            }
                                        }
                                    </optgroup>
                                    i++;
                                }
                            }
                        </select>
                    </div>

                        @{
                            if (Model.DatasetList.Any())
                            {
                                @Html.Partial("_ListItem", Model);
                            }
                            else
                            {
                                <hr>
                                <div>
                                    <h4>
                                        No datasets were found given the active filters and/or search text.  Please refine your search parameters.
                                    </h4>
                                </div>          
                            }
                        }
                </div>
            </div>
            @*</div>*@

        }
    }

    @*PROGRESS BAR MODAL*@
    <div class="modal fade in" id="mod-progress" data-backdrop="static" data-keyboard="false" tabindex="-1" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    File Progress
                </div>
                <div class="modal-body">
                    <div class="text-center">
                        <div class="i-circle warning"><i class="fa fa-info"></i></div>
                        <div id="result" style="font-size: 1.1em; padding-bottom: 5px">
                            <p id="progressBarParagraph"></p>
                            <p id="progressBarPercentage"></p>
                        </div>
                        <div style="width: 30%; margin: 0 auto; display:none;">
                            <div id="progressbar" style="width: 300px; height: 15px"></div>
                            <br />
                        </div>
                        <div id="ProgressStripe" class="progress progress-striped active" style="position:relative; top:10px; width:100%;">
                            <div id="ProgressMessage" class="progress-bar progress-bar-info" style="width: 100%; border:none;"></div>
                        </div>
                        <br />
                    </div>
                </div>
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>
    <!-- /.modal -->
</div>

@section Scripts {
    <script>
        $(function () {
            data.Dataset.ListInit();

            //Code for Startup
            var $selector = $("#filterSelector").select2({
                selectOnClose: true,
                placeholder: "There are no active filters.  Pick an option to the left or click here to begin filtering.",
            });
            $selector.select2({
                selectOnClose: true,
                placeholder: "There are no active filters.  Pick an option to the left or click here to begin filtering.",
            });

            $('.select2-container--default').css('width', '100%');

            //Check the checkboxes that are saved in the local storage.
            var storedNames = JSON.parse(localStorage.getItem("filteredIds"));

            if (storedNames != null) {
                $selector.val(storedNames).trigger("change");

                for (i = 0; i < storedNames.length; i++) {
                    $('#' + storedNames[i]).prop('checked', true);
                }
            }

            //Add the search text to the text box if it exists.
            var searchText = JSON.parse(localStorage.getItem("searchText"));

            if (searchText != null) {
                $('#SearchText')[0].value = searchText;
            }

            function changeWindow()
            {
                var returnUrl = "/Dataset/List/SearchPhrase";

                var text = JSON.parse(localStorage.getItem("searchText"));
                var storedNames = JSON.parse(localStorage.getItem("filteredIds"));

                if (text) {
                    returnUrl += "?searchPhrase=" + text;

                    if (storedNames) {
                        returnUrl += "&ids=";

                        for (i = 0; i < storedNames.length; i++) {
                            returnUrl += storedNames[i] + ',';
                        }
                        returnUrl = returnUrl.replace(/,\s*$/, "");
                    }
                }
                else if (storedNames) {
                    returnUrl += "?ids=";

                    for (i = 0; i < storedNames.length; i++) {
                        returnUrl += storedNames[i] + ',';
                    }
                    returnUrl = returnUrl.replace(/,\s*$/, "");
                }

                //$.ajax({
                //    type: "POST",
                //    url: returnUrl, //in asp.net mvc using ActionResult
                //    dataType: 'html',
                //    success: function (result) {
                //        //Your result is here
                //        $("#datasetList").html(result);
                //    }
                //});

                //returnUrl = returnUrl.replace("ListItem", "SearchFilters");

                //$.ajax({
                //    type: "POST",
                //    url: returnUrl, //in asp.net mvc using ActionResult
                //    dataType: 'html',
                //    success: function (result) {
                //        //Your result is here
                //        console.log(result);
                //        $("#outsideFilters").html(result);
                //    }
                //});

                //Sentry.InjectSpinner($("#datasetList"));

                window.location.href = returnUrl;
                

                return false;
            }

            $(document).on('click', "#btnClearFilters", function (e) {
                var storedNames = JSON.parse(localStorage.getItem("filteredIds"));

                if (storedNames != null) {
                    for (i = 0; i < storedNames.length; i++) {
                        $('#' + storedNames[i]).prop('checked', false);
                    }

                    localStorage.removeItem("filteredIds");
                }

                localStorage.removeItem("searchText");
                $selector.val(null).trigger('change');
                $('#SearchText')[0].value = "";

                changeWindow();
            });

            $(document).on('click', ".searchBtn", function (e) {

                localStorage.setItem("searchText", JSON.stringify($('#SearchText')[0].value));

                changeWindow();
            });

            $('#filterSelector').on('select2:select', function (e) {
                // Do something
                var data = e.params.data;
                $('#' + data.id).prop('checked', true);

                var storedNames = JSON.parse(localStorage.getItem("filteredIds"));

                if (storedNames != null) {
                    storedNames[storedNames.length] = data.id;
                }
                else {
                    var storedNames = [];
                    storedNames[0] = data.id;
                }

                localStorage.setItem("filteredIds", JSON.stringify(storedNames));

                $('#filterSelector').select2("close");

                changeWindow();

            });

            $('#filterSelector').on('select2:unselect', function (e) {
                // Do something
                var data = e.params.data;

                $('#' + data.id).prop('checked', false);

                var storedNames = JSON.parse(localStorage.getItem("filteredIds"));

                if (storedNames != null) {
                    storedNames.splice(storedNames.indexOf(data.id), 1);
                }

                localStorage.setItem("filteredIds", JSON.stringify(storedNames));

                $('#filterSelector').select2("close");

                changeWindow();
            });


            //If there is a checkbox that is checked but has not been added to the Local Storage Add it
            //Happens when coming from the initial landing page.
            var checkedBoxes = $('.filterChbx:checkbox:checked');

            for (i = 0; i < checkedBoxes.length; i++) {
                storedNames = JSON.parse(localStorage.getItem("filteredIds"));

                if (storedNames != null) {
                    if (storedNames.indexOf(checkedBoxes[i].id) == -1) {
                        storedNames[storedNames.length] = checkedBoxes[i].id;
                    }
                }
                else {
                    var storedNames = [];
                    storedNames[0] = checkedBoxes[i].id;
                }

                localStorage.setItem("filteredIds", JSON.stringify(storedNames));
            }
            $selector.val(storedNames).trigger("change");

            $(document).on('click', ".filterChbx", function (e) {
                var storedNames = JSON.parse(localStorage.getItem("filteredIds"));

                var data = $(e.currentTarget);

                if (data.prop('checked') === true) {
                    data.prop('checked', false);
                }
                else {
                    data.prop('checked', true);
                }
            });

            $("[id^=btnApply_]").click(function (e) {
                var $btn = $("[id^=btnApply_]")
                $btn.attr('hidden', 'hidden')

            });

            $(document).on('click', ".filterList", function (e) {
                var storedNames = JSON.parse(localStorage.getItem("filteredIds"));
                var data = $($(e.currentTarget.children[0])[0]);

                if (data.prop('checked') === true) {
                    data.prop('checked', false);

                    if (storedNames != null) {
                        storedNames.splice(storedNames.indexOf($(data).attr('id')), 1);
                    }

                    localStorage.setItem("filteredIds", JSON.stringify(storedNames));
                    $selector.val(storedNames).trigger("change");
                }
                else {
                    data.prop('checked', true);

                    if (storedNames != null) {
                        storedNames[storedNames.length] = $(data).attr('id');
                    }
                    else {
                        var storedNames = [];
                        storedNames[0] = $(data).attr('id');
                    }

                    localStorage.setItem("filteredIds", JSON.stringify(storedNames));
                    $selector.val(storedNames).trigger("change");
                }

                changeWindow();
            });

                        /**
            //If we want to have the left hand filter boxes to be collapsed when there is nothing yet selected.
            //Turned off because I don't like the animation feature
            //  - Andrew Quaschnick

            var catExists = false;
            var ownerExists = false;
            var freqExists = false;
            for (i = 0; i < storedNames.length; i++) {
                if ($('#' + storedNames[i]).parents('.filterBorder_blue')) {
                    catExists = true;
                }
                else if ($('#' + storedNames[i]).parents('.filterBorder_green')) {
                    ownerExists = true;
                }
                else if ($('#' + storedNames[i]).parents('.filterBorder_gold')) {
                    freqExists = true;
                }
            }
            if (!catExists) {
                var id = 'filterType_Category';
                var category = "#hide_" + id
                var icon = "#icon_" + id;

              //  $(category).css('display', 'none');
               // $(icon).toggleClass("glyphicon-chevron-down glyphicon-chevron-up");
            }

            if (!ownerExists) {
                var id = 'filterType_Sentry';
                var category = "#hide_" + id
                var icon = "#icon_" + id;

               // $(category).css('display', 'none');
               // $(icon).toggleClass("glyphicon-chevron-down glyphicon-chevron-up");
            }

            if (!freqExists) {
                var id = 'filterType_Frequency';
                var category = "#hide_" + id
                var icon = "#icon_" + id;

               // $(category).css('display', 'none');
               // $(icon).toggleClass("glyphicon-chevron-down glyphicon-chevron-up");
            }

            **/

        });

        $(document).ready(function () {
           // $("#filterSelector").select2();
        });

        //JS for using the navbar that is off the window
        ///* Set the width of the side navigation to 250px and the left margin of the page content to 250px */
        //function openNav() {
        //    document.getElementById("mySidenav").style.width = "250px";
        //    document.getElementById("main").style.marginLeft = "250px";
        //}

        ///* Set the width of the side navigation to 0 and the left margin of the page content to 0 */
        //function closeNav() {
        //    document.getElementById("mySidenav").style.width = "0";
        //    document.getElementById("main").style.marginLeft = "0";
        //}
    </script>
}
