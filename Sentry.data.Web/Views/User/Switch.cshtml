@model UserSwitchModel
@{
    ViewData["Title"] = "User Switch";
}

<div class="page-header">
    <h1>User Switch</h1>
</div>

@using (Html.BeginForm())
{
@Html.AntiForgeryToken()

<div class="">
    <div class="form-group">
        Hello @(Model.CurrentRealUserName).
        @{if (!String.IsNullOrEmpty(Model.CurrentImpersonatedUserName))
            {
                @: You are currently impersonating @(Model.CurrentImpersonatedUserName).
            }
            else
            {
                @: You are not currently impersonating anyone.
            }
        }
    </div>
    @if (!String.IsNullOrEmpty(Model.CurrentImpersonatedUserName))
    {
    <div>

        <div class="row">
            <div class="col-lg-12">
                <div class="row">
                    <div class="col-lg-6">
                        <h2>Dataset Management</h2>
                        <h3 style="margin-left: 15px;">Download</h3>
                        <p style="margin-left: 30px;">Can View Datasets : @Model.ImpersonatedUser.CanViewDataset</p>                      
                        <p style="margin-left: 30px;">Can Edit Datasets : @Model.ImpersonatedUser.CanModifyDataset</p>
                        <p style="margin-left: 30px;">Can Manage Configs : @Model.ImpersonatedUser.CanModifyDataset</p>

                    </div>
                    <div class="col-lg-6">
                        <h2>Data Asset Management</h2>
                        <h3 style="margin-left: 15px;">Download</h3>
                        <p style="margin-left: 30px;">Can View Data Assets : @Model.ImpersonatedUser.CanViewDataAsset</p>
                        <p style="margin-left: 30px;">Can Manage Asset Alerts : @Model.ImpersonatedUser.CanManageAssetAlerts</p>

                        <hr />
                        <h2>Additional Controls</h2>
                        <h3 style="margin-left: 15px;">Admin Controls</h3>
                        <p style="margin-left: 30px;">Can User Switch : @Model.ImpersonatedUser.CanUserSwitch</p>
                    </div>
                </div>
            </div>
        </div>

    </div>
    }

    <hr />
    

            <fieldset>

                @Html.DisplayFor(((model) => ViewData.ModelState))

                <div class="form-group">
                    @Html.LabelFor(((model) => model.OwnerID), "Enter the user id you wish to switch to", new { @class = "control-label" })
                    <div class="">
                        @Html.Editor("OwnerPicker", new { htmlAttributes = new { @class = "form-control" } })
                        @Html.HiddenFor(((model) => model.OwnerID), new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(((model) => model.OwnerID), "", new { @class = "text-danger" })
                    </div>
                </div>



            </fieldset>
            <hr />
            <input type="submit" value="Switch to User" class="btn btn-primary" />
            @Html.ActionLink("Undo User Switch", "Restore", null, new { @class = "btn btn-default" })


        </div>
}


@section Scripts {
    <script>
        $(function () {
            $.assocSetup({ url: "https://hrempsecurequal.sentry.com/api/associates" });

            var picker = $("#OwnerPicker");

            picker.assocAutocomplete({
                associateSelected: function (associate) {
                    console.log(associate);
                    $('#OwnerID').val(associate.Id);
                }
            });

            $("p").each(function (a, b) { if (b.innerHTML.indexOf('True') !== -1) { $(b).css('font-weight', 'bold'); } });
        });
    </script>
}