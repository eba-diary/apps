@model UserSwitchModel
@{
    ViewData["Title"] = "User Switch";
}

<div class="page-header">
    <h1>User Switch</h1>
</div>

@using (Html.BeginForm())
{
@Html.AntiForgeryToken()

    <div class="">
        <div class="form-group">
            Hello @(Model.CurrentRealUserName).
            @{if (!String.IsNullOrEmpty(Model.CurrentImpersonatedUserName))
                {
                    @: You are currently impersonating @(Model.CurrentImpersonatedUserName).
        }
                else
                {
                    @: You are not currently impersonating anyone.
        }
                }
        </div>
        <fieldset>

            @Html.DisplayFor(((model) => ViewData.ModelState))

            <div class="form-group">
                @Html.LabelFor(((model) => model.RequestedUserSwitchId), "Enter the user id you wish to switch to", new { @class = "control-label" })
                <div class="">
                    @Html.EditorFor(((model) => model.RequestedUserSwitchId), new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(((model) => model.RequestedUserSwitchId), "", new { @class = "text-danger" })
                </div>
            </div>

            <input type="submit" value="Switch to User" class="btn btn-primary" />
            @Html.ActionLink("Undo User Switch", "Restore", null, new { @class = "btn btn-default" })
        </fieldset>

    </div>
}
