@model Sentry.data.Web.NotificationModel
@{
    ViewBag.Title = "Create Notification";
}

<div class="topBanner">
    <div>
        <a class="backToList" href="/Notification/ManageNotification"><em class="icon-chevron-left"></em>Back to Previous Page</a>
    </div>
</div>

@if (Model.NotificationId == 0)
{
    <h1 class="pt-1">Create Notification</h1>
}
else
{
    <h1 class="pt-1">Edit Notification</h1>
}

<hr />
@*Attach class to form because Notification.js uses class here to submit form because of quill*@
@using (Html.BeginForm("SubmitNotification", "Notification", FormMethod.Post, htmlAttributes: new { @class = "modifyNotificationForm" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.CreateUser)
    @Html.HiddenFor(model => model.NotificationId, new { @class = "notificationId" })

<div class="form-horizontal">
    @Html.ValidationSummary(false, "", new { @class = "text-danger" })

    <div class="md-form">
        @Html.LabelFor((model) => model.ObjectId, htmlAttributes: new { @class = "mdb-main-label" })
        @Html.DropDownListFor(model => model.ObjectId, Model.AllDataAssets, new { @class = "mdb-select" })
    </div>
    <div class="md-form">
        @Html.TextBoxFor(m => m.StartTime, new { @class = "form-control", @type = "datetime-local" })
        @Html.LabelFor(m => m.StartTime, htmlAttributes: new { @class = "active" })
    </div>
    <div class="md-form">
        @Html.TextBoxFor(m => m.ExpirationTime, new { @class = "form-control", @type = "datetime-local" })
        @Html.LabelFor(m => m.ExpirationTime, htmlAttributes: new { @class = "active" })
    </div>

    <div class="md-form" id="notificationCategoryContainer">
        @Html.LabelFor((model) => model.NotificationCategory, htmlAttributes: new { @class = "mdb-main-label" })
        @Html.DropDownListFor(model => model.NotificationCategory, Model.AllNotificationCategories, new { @class = "mdb-select" })
    </div>

    <div class="md-form" id="notificationSubCategoryReleaseNotesContainer">
        @Html.LabelFor((model) => model.NotificationSubCategoryReleaseNotes, htmlAttributes: new { @class = "mdb-main-label" })
        @Html.DropDownListFor(model => model.NotificationSubCategoryReleaseNotes, Model.AllNotificationSubCategoriesReleaseNotes, new { @class = "mdb-select" })
    </div>

    <div class="md-form" id="notificationSubCategoryNewsContainer">
        @Html.LabelFor((model) => model.NotificationSubCategoryNews, htmlAttributes: new { @class = "mdb-main-label" })
        @Html.DropDownListFor(model => model.NotificationSubCategoryNews, Model.AllNotificationSubCategoriesNews, new { @class = "mdb-select" })
    </div>


    <div class="form-group">
        @Html.LabelFor((model) => model.MessageSeverity, htmlAttributes: new { @class = "mdb-main-label" })
        @Html.DropDownListFor(model => model.MessageSeverity, Model.AllSeverities, new { @class = "mdb-select" })
    </div>

    <div class="form-group">

        @Html.LabelFor((model) => model.Title, htmlAttributes: new { @class = "control-label" })


        <!-- Quill editor container -->
        <div id="quillEditorTitle"> </div>

        <!-- Bogus TextArea to store Title which will be the encoded version saved to DB, notification.js will copy an encoded version here upon submit button -->
        @Html.TextAreaFor((model) => model.Title, htmlAttributes: new { @class = "quillTitleEncoded", @style = "display:none" })


    </div>

    <div class="form-group" id="messageContainer">
        @Html.LabelFor((model) => model.Message, htmlAttributes: new { @class = "control-label" })
        <!-- Quill editor container -->
        <div id="quillEditorMessage"> </div>

        <!-- Bogus TextArea which will hold encoded message too be saved to DB, notification.js will copy an encoded version here upon submit button -->
        @Html.TextAreaFor((model) => model.Message, htmlAttributes: new { @class = "quillMessageEncoded", @style = "display:none" })

    </div>

    <div class="md-form">
        <span class="text-muted"><em>** Fields in <b>Bold</b> are Required</em></span>
    </div>
    <br />

    <div class="form-group">
        <div>
            <!-- Submit button triggers JS function -->
            <input value="Submit" type="button" class="btn btn-primary waves-effect waves-light" onclick="data.Notification.submitChanges() " />
            <a class="btn btn-warning" href="/Notification/ManageNotification">Cancel</a>
        </div>
    </div>

</div>

}
@section Scripts {

    @Scripts.Render("~/bundles/quill")

<script type="text/javascript">

        $(function () {

            $('#ObjectId').materialSelect();
            $('#NotificationCategory').materialSelect();
            $('#MessageSeverity').materialSelect();

            data.Notification.CLA3882_DSC_NOTIFICATION_SUBCATEGORY = @Model.CLA3882_DSC_NOTIFICATION_SUBCATEGORY.ToString().ToLower();
            data.Notification.initQuill();      //init Quill RTF editor and fill it with notification message
            data.Notification.initAssetListener();
            data.Notification.initNotificationCategoryListener();
        });

</script>
}