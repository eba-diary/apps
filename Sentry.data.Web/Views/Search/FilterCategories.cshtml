@model List<FilterCategoryModel>

@{
    IEnumerable<FilterCategoryModel> orderedModel = Model.Where(x => x.CategoryOptions.Count > 1 || x.CategoryOptions.All(a => a.Selected)).OrderBy(x => x.CategoryName);
    List<FilterCategoryOptionModel> allOptions = orderedModel.SelectMany(x => x.CategoryOptions).ToList();
}

@functions
{
    public string SafeValue(string value)
    {
        if(value == null) { return ""; }
        return value.Length > 25 ? value.Substring(0, 22) + "..." : value;
    }
}

@helper DisplayCategoryOptions(IEnumerable<FilterCategoryOptionModel> options, bool hideCounts)
{
    foreach (FilterCategoryOptionModel option in options.ToList())
    {
        <li class="filter-search-category-option" title="@option.OptionValue">
            <div class="form-group mb-0">
                <input type="checkbox" id="@option.OptionId" class="form-check-input filter-search-category-option-checkbox" value="@option.OptionValue" checked="@option.Selected">
                <label for="@option.OptionId" class="form-check-label filter-search-category-option-label">
                    @SafeValue(option.OptionValue)
                    @if (!hideCounts)
                    {
                        <span class="filter-search-category-option-count">(@option.ResultCount.ToString("N0"))</span>
                    }
                </label>                
            </div>
        </li>
    }
}

<div class="filter-search-active-options-container bottom-border @(allOptions.Any(x => x.Selected) ? "" : "display-none")">
    @foreach (FilterCategoryOptionModel option in allOptions)
    {
        <button type="button" class="btn btn-default btn-sm filter-search-active-option-close display-none" id="clearOption_@option.OptionId" title="@option.ParentCategoryName">
            <span class="active-option-close-symbol">&#x2715</span>
            <span>@SafeValue(option.OptionValue)</span>
        </button>
    }
</div>

<div class="filter-search-categories">
    @if (orderedModel.Any())
    {
        foreach (FilterCategoryModel category in orderedModel)
        {
            string safeName = category.CategoryName.Replace(" ", "_").Replace("/", "_");
            string categoryTypeId = "categoryType_" + safeName;
            string categoryMoreId = "categoryMore_" + safeName;
            int visibleOptionCount = 8;

            <div class="filter-search-category-container bottom-border">
                <div class="filter-search-category-head" id="@categoryTypeId">
                    <span class="filter-search-category-head-name">@category.CategoryName</span>
                    <em class="filter-search-category-head-icon fas fa-chevron-@(category.DefaultCategoryOpen ? "up" : "down")" id="icon_@categoryTypeId"></em>
                </div>

                <div class="filter-search-category-options @(category.DefaultCategoryOpen ? "" : "display-none")" id="hide_@categoryTypeId">
                    <ul class="list-unstyled">
                        @DisplayCategoryOptions(category.CategoryOptions.Take(visibleOptionCount), category.HideResultCounts)

                        <li class="display-none" id="hidden_@categoryMoreId">
                            <ul class="notNested">
                                @DisplayCategoryOptions(category.CategoryOptions.Skip(visibleOptionCount), category.HideResultCounts)
                            </ul>
                        </li>
                    </ul>

                    @if (category.CategoryOptions.Count > 15)
                    {
                        <a href="#" class="filter-search-category-more" id="@("categoryAll_" + safeName)" data-toggle="modal" data-target="#categoryModal_@safeName">See All</a>
                    }
                    else if (category.CategoryOptions.Count > visibleOptionCount)
                    {
                        <a href="#" class="filter-search-category-more" id="@categoryMoreId">Show More</a>
                    }
                </div>
            </div>
        }
    }
    else
    {
        <div class="filter-search-categories-none">
            <span class="fas fa-exclamation-triangle"></span>
            <div>No filters available for current search</div>
        </div>
    }
</div>