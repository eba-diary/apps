@model EditCategoryModel
@{using (Ajax.BeginForm("Create", new { controller = "Category" },
                                                       new AjaxOptions
                                                       {
                                                           OnSuccess = "data.Category.AjaxSuccess(data,'" + Model.ParentCategoryId + "')",
                                                           OnFailure = "data.Category.AjaxFailure();",
                                                           InsertionMode = InsertionMode.ReplaceWith,
                                                           UpdateTargetId = "CreateCategoryForm"
                                                       },
                                                       new { id = "CreateCategoryForm" }))
    {

@Html.AntiForgeryToken()
<div class="form-horizontal">
    <fieldset>
        @*Show the custom validation summary*@
        @Html.DisplayFor((model) => ViewData.ModelState)

        <div class="form-group">
            @Html.LabelFor((model) => model.ParentCategoryName, new { @class = "control-label col-sm-4" })
            <div class="col-sm-8">
                <p class="form-control-static">@Html.DisplayFor((model) => model.ParentCategoryName)</p>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor((model) => model.Name, new { @class = "control-label col-sm-4" })
            <div class="col-sm-8">
                @Html.EditorFor((model) => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor((model) => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor((model) => model.ParentCategoryId)

        <div class="form-group">
            <div class="col-sm-offset-4 col-sm-8">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>

    </fieldset>
</div>
        }
    }
<script>
    //Because this is a partial view, we can't put the initialization script into
    //the Scripts section - so we're relying on the fact that this partial view
    //is loaded via AJAX and injected into a page that already has JQuery loaded
    $(function () {
        data.Category.CreateInit();
    });
</script>
