@model Sentry.data.Web.BusinessIntelligenceModel

@section styles
{
    <link rel="stylesheet" href="@Html.GetContent("fancybox_css.*.css")" />
}

<h2>@ViewData["Title"]</h2>

@using (Html.BeginForm("BusinessIntelligenceForm", "BusinessIntelligence", FormMethod.Post, new { @id = "BusinessIntelligenceForm", @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <p>Please fill out the following fields describing your Exhibit or Dashboard.  Before starting check to see if your exhibit or dashboard is not already on this site by using our <a href="~/Search/BusinessIntelligence/Index?searchPhrase=">search tool.</a></p>

    @*Show the custom validation summary*@
    @Html.DisplayFor((model) => ViewData.ModelState)

    @*This DIV is required for JQuery to add hidden input values to*@
    <div id="informationPanel"></div>

    <h4 class="pt-2">Information</h4>

    @Html.HiddenFor(model => model.DatasetId)
    @Html.HiddenFor(model => model.PrimaryContactId)
    @Html.HiddenFor(model => model.CreationUserId)
    @Html.HiddenFor(model => model.UploadUserId)
    for (int i = 0; i < Model.ContactIds.Count; i++)
    {
        @Html.HiddenFor(model => model.ContactIds[i])
    }

    @* Name *@
    <div class="md-form">
        @Html.EditorFor(model => model.DatasetName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.LabelFor(model => model.DatasetName, htmlAttributes: new { @class = !String.IsNullOrEmpty(Model.DatasetName) ? "active" : "" })


        @Html.ValidationMessageFor(model => model.DatasetName, "", new { @class = "text-danger" })
    </div>

    @* Description *@
    <div class="md-form mb-0">
        @Html.TextAreaFor(model => model.DatasetDesc, new { @class = "md-textarea w-100" })
        @Html.LabelFor(model => model.DatasetDesc, htmlAttributes: new { @class = "" })
        @Html.ValidationMessageFor(model => model.DatasetDesc, "", new { @class = "text-danger" })
        <span class="text-muted">
            <em>This description will be shown on the Exhibit Search Page.</em>
        </span>
    </div>
    @* Categories *@
    <div>
        @Html.ListBoxFor(model => model.DatasetCategoryIds, Model.AllCategories, new { @class = "mdb-select md-form", multiple = "true" })
        @Html.LabelFor((model) => model.DatasetCategoryIds, new { @class = "mdb-main-label" })
        @Html.ValidationMessageFor((model) => model.DatasetCategoryIds, "", new { @class = "text-danger" })
    </div>


    @* Business Unit *@
    <div>
        @Html.ListBoxFor(model => model.DatasetBusinessUnitIds, Model.AllBusinessUnits, new { @class = "mdb-select md-form", multiple = "true" })
        @Html.LabelFor((model) => model.DatasetBusinessUnitIds, new { @class = "mdb-main-label" })
        @Html.ValidationMessageFor((model) => model.DatasetBusinessUnitIds, "", new { @class = "text-danger" })
    </div>

    @* Function *@
    <div>
        @Html.ListBoxFor(model => model.DatasetFunctionIds, Model.AllDatasetFunctions, new { @class = "mdb-select md-form", multiple = "true" })
        @Html.LabelFor((model) => model.DatasetFunctionIds, new { @class = "mdb-main-label" })
        @Html.ValidationMessageFor((model) => model.DatasetFunctionIds, "", new { @class = "text-danger" })
    </div>

    @* Exhibit Type*@
    <div>
        @Html.DropDownListFor(model => model.FileTypeId, Model.AllDataFileTypes, new { @class = "mdb-select md-form" })
        @Html.LabelFor((model) => model.FileTypeId, new { @class = "mdb-main-label" })
        @Html.ValidationMessageFor((model) => model.FileTypeId, "", new { @class = "text-danger" })
    </div>

    @* Frequency *@
    <div>
        @Html.DropDownListFor(model => model.FrequencyId, Model.AllFrequencies, new { @class = "mdb-select md-form" })
        @Html.LabelFor((model) => model.FrequencyId, new { @class = "mdb-main-label" })
        @Html.ValidationMessageFor((model) => model.FrequencyId, "", new { @class = "text-danger" })
    </div>

    @* Tags *@
    @Html.Partial("_Tags", Model)

    @*Report Location *@
    <div class="md-form">
        @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "" })
        @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
    </div>

    <div class="md-form urlDescription">
        <label class="control-label"></label>
        <span class="text-muted">
            <em>If the report has a url (Tableau and Sharepoint locations), specify the URL to the report. See example below</em><br />
            <em>     (i.e. https://tableau.sentry.com/#/site/SentryInsurance/views/WorkflowPayloads/WorkflowPayloads?:iid=1 )</em><br />
            <br />
            <em>If the report resides on a network location, please specify the UNC path.  See examples below</em><br />
            <em>     N: Drive location - (\\Sentry.com\Share\O_IS\... instead of N:\O_IS\...)</em><br />
            <em>     DFS location - (\\Sentry.com\appfs\...)</em>
        </span>
    </div>
    <div id="BOGetLatestPanel" class="hidden">
        <div class="form-check">
            <input type="checkbox" value="true" class="form-check-input" id="GetLatest" name="GetLatest" checked="@Model.GetLatest">
            @Html.LabelFor((model) => model.GetLatest, new { @class = "form-check-label" })
            @Html.Label("This will ensure users are linked to the latest revision of the report specified above. This flag is only applicable for Business Objects scheduled reports.", new { @class = "text-muted" })
        </div>
    </div>

    @* Contact *@
    <div class="md-form associatePicker">
        <label for="ContactSearch" class="control-label active">Add Contact</label>
        <input id="ContactSearch" type="text" class="form-control w-100" />
    </div>

    <div class="md-form">
        <span class="control-label">Selected Contacts</span>
        <div class="contactList">
            @if (Model.ContactDetails != null)
            {
                foreach (var contactInfo in Model.ContactDetails)
                {
                    <div class="contacts-block" id="contact_@contactInfo.Id"><span class="contactinfo-remove">x</span>@contactInfo.Name</div>
                }
            }
        </div>
    </div>


    <div>

        @if (Model.CLA1130_SHOW_ALTERNATE_EMAIL)        //JUST REMOVE THIS LINE WHEN FEATURE GOES LIVE
        {
            <div class="md-form">
                @Html.EditorFor(model => model.AlternateContactEmail, new { htmlAttributes = new { @class = "form-control", @type = "email" } })
                @Html.LabelFor(model => model.AlternateContactEmail, htmlAttributes: new { @class = !String.IsNullOrEmpty(Model.AlternateContactEmail) ? "active" : "" })
                @Html.ValidationMessageFor(model => model.AlternateContactEmail, "", new { @class = "text-danger" })
            </div>
            <span class="text-muted">
                <em>Email Address like a Distribution List or Alternate Contact.</em>
            </span>
        }
        <br />
        <br />

    </div>







    @* Thumbnails *@
    <div class="form-group">
        <span class="control-label col-md-2">Thumbnail Images</span>
        <div class="col-md-10">
            <div class="detail-thumbnail-list col-lg-10">
                @if (Model.Images.Count == 3)
                {
                    <div class="add-thumbnail" style="display:none">
                        <div class="image-upload-a">
                            <button id="addNewImage" type="button" class="btn-success btn"><em class="fas fa-plus pr-3"></em>Add Image</button>
                            <input type="file" name="ImageFileData" id="files" class="image-upload" />
                        </div>
                    </div>
                }
                else
                {
                    <div class="add-thumbnail">
                        <div class="image-upload-a">
                            <button id="addNewImage" type="button" class="btn-success btn"><em class="fas fa-plus pr-3"></em>Add Image</button>
                            <input type="file" name="ImageFileData" id="files" class="image-upload" />
                        </div>
                    </div>
                }
                @foreach (ImageModel img in Model.Images)
                {
                    @Html.Partial("_Images", img);
                }
            </div>
        </div>
    </div>

    <br />
    <div class="md-form">
        <span class="text-muted"><em>** Fields in <b>Bold</b> are Required</em></span>
    </div>
    <div class="md-form">
        <div>
            <input type="submit" value="Submit" class="btn btn-primary" />
            <a id="CancelButton" class="btn btn-warning" data-id="@Model.DatasetId" href="">Cancel</a>
        </div>
    </div>
}

@* use a hidden field to store the value of the BusinessObjects enum; used to avoid hardcoding it in the JavaScript file (Report.js) *@
<input type="hidden" id="hidBizObjEnumVal" value="@Model.BusinessObjectsEnumValue" />

@section Scripts {
    <script src="@Html.GetContent("fancybox.*.js")"></script>
    <script>
        $(function () {
            data.Report.FormInit('@(Model.HrempServiceUrl)' , '@(Model.HrempServiceEnv)');
        });
    </script>
}
