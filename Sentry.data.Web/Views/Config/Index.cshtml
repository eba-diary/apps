@model Sentry.data.Web.ObsoleteDatasetModel

@{
    ViewBag.Title = "View Dataset Configuration Details";
    string color = Model.DatasetCategory.Color;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<a class="backToList" href="/Dataset/Detail/@Model.DatasetId"><span class="glyphicon glyphicon-chevron-left"></span>  Back to Dataset Information</a>

<div class="topBanner" style="height: 60px;
    margin-top: 20px;
    border-bottom: 1px #DDDDDD solid;">
    <div class="relative hidden-sm hidden-xs">
        <div>

            <div class="no-overflow">
                <h1 class="detailName leftFloat @color">
                    @Model.DatasetName

                    @if (Model.IsSecured)
                    {
                        <span class="glyphicon glyphicon-lock lockIcon" data-toggle="tooltip" data-placement="top" title="Secure"></span>
                    }
                </h1>

                @{
                    foreach (string item in Model.DistinctFileExtensions())
                    {
                        <div class="extension detailExt bg_gray htCenter ext_@item">@item</div>
                    }
                }
            </div>
        </div>
    </div>

    <br />

    <div class="hidden-md hidden-lg">
        <h1 class="detailName leftFloat @color">
            @Model.DatasetName

            @if (Model.IsSecured)
            {
                <span class="glyphicon glyphicon-lock lockIcon" data-toggle="tooltip" data-placement="top" title="Secure"></span>
            }
        </h1>

        <div>
            <div class="btn-group rightFloat dataset-operation-button" data-toggle="tooltip" data-placement="top" title="Additional Actions" style="margin-top: 5px;">
                <button type="button"
                        class="btn btn-default borderdk_gray borderdk_@color dropdown"
                        data-toggle="dropdown">
                    <span class="glyphicon glyphicon-menu-hamburger @color"></span>
                </button>

                <ul class="dropdown-menu" x-placement="bottom-start" style="position: absolute; transform: translate3d(0px, 50px, 0px); top: -10px; left: 0px; will-change: transform;">
                    <li id="SubscribeModal" style="cursor: pointer;" data-id="@Model.DatasetId" data-placement="top" title="Subscribe">
                        <a>
                            Subscribe
                        </a>
                    </li>

                    @if (Model.CanQueryTool)
                    {
                        <li title="Query Dataset">
                            <a href="/Dataset/QueryTool?DatasetID=@Model.DatasetId">
                                Query this Dataset
                            </a>
                        </li>
                    }
                    @if (Model.CanEditDataset)
                    {
                        <li>
                            <a href="/Config/Dataset/@Model.DatasetId">
                                Manage Schemas
                            </a>
                        </li>
                    }

                    @if (Model.CanUpload)
                    {
                        <li id="UploadModal" data-id="@Model.DatasetId">
                            <a>Upload Files</a>
                        </li>
                    }

                    @if (Model.CanEditDataset)
                    {
                        <li id="EditDataset_@Model.DatasetId" data-id="@Model.DatasetId">
                            <a>Edit Dataset</a>
                        </li>
                    }
                </ul>
            </div>
        </div>

    </div>

</div>


<br />
<p>Click any section header to begin:</p>

@{
    if (Model.CanEditDataset)
    {
        <div id="configs">


            @foreach (var item in Model.DatasetFileConfigs)
            {
                <div>
                    <div class="configHeader categoryBanner-@color">
                        <h1 class="@color">@item.ConfigFileName</h1>
                        <i class="glyphicon glyphicon-menu-up tracker-menu-icon"></i>
                    </div>

                    <div class="configContainer" style="display: none;">

                        <h4 class="@color">Schema and Configuration Information</h4>
                        <hr />

                        <div class="col-md-12">
                            @if (item.ConfigFileDesc != null && item.ConfigFileDesc.Length >= 300)
                            {

                                int lastInfo = item.ConfigFileDesc.Substring(0, 300).LastIndexOf(" ");
                                <p>
                                    <span style="margin-top: 15px;">@item.ConfigFileDesc.Substring(0, lastInfo)</span>
                                    <span id="usageSeeMoreEllipsis">...&nbsp;</span>
                                    <span id="usageSeeMorePanel" style="display: none;">@item.ConfigFileDesc.Substring(lastInfo)</span>
                                    <span id="usageSeeMoreButton" style="cursor: pointer;"><a onclick="$('#usageSeeMorePanel').show(); $(this).parent().hide(); $('#usageShowLessButton').show(); $('#usageSeeMoreEllipsis').hide();">See More</a></span>
                                    <span id="usageShowLessButton" style="cursor: pointer; display:none;"><a onclick="$('#usageSeeMorePanel').hide(); $(this).parent().hide(); $('#usageSeeMoreButton').show(); $('#usageSeeMoreEllipsis').show();">Show Less</a></span>
                                </p>
                            }
                            else
                            {
                                <p style="margin-top: 15px;">@item.ConfigFileDesc</p>
                            }
                        </div>
                        <div class="col-md-12 configDetailRow">
                            <div class="col-md-3">Storage id: <b>@item.RawStorageId</b></div>
                            <div class="col-md-3">Schema id: <b>@item.SchemaId</b></div>
                            <div class="col-md-3">Configuration classification: <b>@item.FileType</b></div>
                            <div class="col-md-3">File type: <b>@item.FileExtension.Name</b></div>
                        </div>
                        @if (item.FileExtension.Name.Trim() == "ANY" || item.FileExtension.Name.Trim() == "DELIMITED" || item.FileExtension.Name.Trim() == "CSV")
                        {
                            <div class="col-md-12 configDetailRow">
                                <div class="col-md-6">This schema's current Delimiter is ( <b>@item.Delimiter</b> )</div>
                                <div class="col-md-6">Files contain headers: <b>@item.HasHeader</b></div>
                            </div>
                        }
                        <div class="col-md-12 configDetailRow">
                            @if (item.FileExtension.Name.Trim() == "ANY" || item.FileExtension.Name.Trim() == "DELIMITED")
                            {<div class="col-md-12">This configuration will allow <b>all</b> file extensions.</div>}
                            else
                            {<div class="col-md-12">This configuration will only allow files with <b>.@item.FileExtension.Name.ToLower()</b> extension</div>}
                        </div>
                        <div class="col-md-12 configDetailRow">
                            <div class="col-md-12">This configuration Data Scope is <b>@item.ScopeType.Name</b> which means :</div>
                            <div class="col-md-11 col-md-offset-1">@item.ScopeType.Description</div>
                        </div>
                        <div class="col-md-12 configDetailRow">
                            @if (item.CreateCurrentView)
                            {
                                <div class="col-md-12">A current view exists for this schema which filters to data from latest file processed.</div>
                            }
                            else
                            {
                                <div class="col-md-12">This schema does not contain a current view</div>
                            }
                        </div>


                        <a class="btn btn-primary" href="/Config/Edit/@item.ConfigId">Edit</a>
                        <button class="btn btn-danger" id="btnDeleteConfig" data-id="@item.ConfigId">Delete</button>

                        <hr />
                        <h4 class="@color">Dataset Retrieval Jobs</h4>
                        <hr />

                        @foreach (var job in item.RetrieverJobs)
                        {
                            <div class="retJob @job.DataSource.SourceType">
                                <div class="jobHeader categoryBanner-@color">
                                    <h6>@job.DataSource.Name</h6>
                                    <i class="retJobDetails tracker-menu-icon glyphicon glyphicon-menu-up"></i>
                                    @if (job.DataSource.SourceType != "S3Basic" && job.DataSource.SourceType != "DFSBasic")
                                    {
                                        <button style="float:right; margin-top:3px;" class="btn btn-default on-demand-run" id="@job.Id">On-Demand Run</button>

                                        if (job.IsEnabled)
                                        {
                                            <button style="float:right; margin-top:3px;" class="btn btn-default jobstatus jobstatus_enabled" id="@job.Id">Disable</button>
                                        }
                                        else
                                        {
                                            <button style="float:right; margin-top:3px;" class="btn btn-default jobstatus jobstatus_disabled" id="@job.Id"> Enable</button>
                                        }
                                    }
                                </div>
                                <div class="jobContainer" style="display:none;">
                                    <p>@job.DataSource.Description</p>

                                    @if (job.IsGeneric)
                                    {
                                        <p>This is the Generic Data File Configuration that was created when the Dataset was created. Certain fields cannot be modified.</p>
                                    }
                                    <p><span class="schedule">@job.Schedule</span></p>
                                    <p>This retriever job is grabbing files from the following URL </p>
                                    <p class="filePath" style="margin-left: 30px;">@job.GetUri() </p>

                                    @if (job.JobOptions != null)
                                    {
                                        if (job.JobOptions.IsRegexSearch)
                                        {
                                            <p>This job is searching for Regex</p>
                                        }
                                        else
                                        {
                                            <p>This job is searching for Exact Strings</p>
                                        }

                                        <p>It is searching for : @job.JobOptions.SearchCriteria</p>

                                        if (job.JobOptions.OverwriteDataFile)
                                        {
                                            <p>This job will overwrite exact file names with the same name and save them as versions.</p>
                                        }

                                        if (!String.IsNullOrWhiteSpace(job.JobOptions.TargetFileName))
                                        {
                                            <p>This the target file name :  @job.JobOptions.TargetFileName</p>
                                        }
                                    }


                                    @if (job.JobOptions.CompressionOptions != null)
                                    {
                                        if (job.JobOptions.CompressionOptions.IsCompressed)
                                        {
                                            <p>This job is uncompressing @job.JobOptions.CompressionOptions.CompressionType files.</p>

                                            foreach (var fileName in job.JobOptions.CompressionOptions.FileNameExclusionList)
                                            {
                                                <p>@fileName is being excluded.</p>
                                            }
                                        }
                                    }

                                    <hr />
                                    <p>Created on : @job.Created</p>
                                    <p>Modified on : @job.Modified</p>

                                    <a class="btn btn-primary" href="/Config/@item.ConfigId/Job/Edit/@job.Id">Edit</a>

                                </div>
                            </div>
                        }

                        <a class="btn btn-success" href="/Config/@item.ConfigId/Job/Create">Add Job</a>

                        @if (item.Schemas != null && item.Schemas.Any())
                        {
                            <hr />
                            <h4 class="@color">Schema (columns, datatypes, delimiter, etc.)</h4>
                            <hr />
                            foreach (var schema in item.Schemas.OrderByDescending(x => x.DataElementCreate_DTM))
                            {
                                <div class="retJob">
                                    <div class="jobHeader categoryBanner-@color">
                                        <h6>@schema.SchemaName</h6>
                                        <i class="retJobDetails tracker-menu-icon glyphicon glyphicon-menu-up"></i>

                                        @if (schema.SchemaIsPrimary)
                                        {
                                            <span style="float: right; margin-top: 10px;margin-righ t: 10px;"><span class="glyphicon glyphicon-ok"></span> This is the Primary Schema</span>
                                        }
                                        @*@if (schema.HiveTable.Any(x => x.IsPrimary))
                        {
                            <span style="float: right; margin-top: 10px;margin-right: 10px;"><span class="glyphicon glyphicon-ok"></span> This Schema has the Primary Hive Table</span>
                        }*@
                                        @if (schema.SchemaIsForceMatch)
                                        {
                                            <span style="float: right; margin-top: 10px;margin-right: 10px;"><span class="glyphicon glyphicon-ok"></span> Force Match</span>
                                        }
                                        else
                                        {
                                            <span style="float: right; margin-top: 10px;margin-right: 10px;"><span class="glyphicon glyphicon-remove"></span> Force Match</span>
                                        }



                                    </div>
                                    <div class="jobContainer" style="display:none;">

                                        <p>@schema.SchemaDescription</p>
                                        @*<p>This schema's current Delimiter is <b>@schema.Delimiter</b></p>
                        <p>Raw files contain headers: <b>@schema.HasHeader</b></p>*@

                                        @if (schema.DataObjects.Count() == 0)
                                        {
                                            @*<p>This schema Id is @schema.DataElement_ID.</p>*@
                                            <p>This schema is not currently does not yet have any columns associated to it.</p>
                                        }
                                        @*else
                        {
                            <p>This schema Id is @schema.DataElement_ID.</p>
                        }*@

                                        <p>Created on: @schema.DataElementCreate_DTM</p>
                                        <p>Last Modified on: @schema.DataElementChange_DTM</p>

                                        @if (schema.SchemaIsForceMatch)
                                        {
                                            <p>This schema is currently set to force match for this data file config.</p>
                                        }

                                        @*@if (schema.HiveTables.Any())
                        {
                            <br />
                            <h4 class="@color">Hive Tables</h4>
                            <hr />

                            foreach (var table in schema.HiveTables)
                            {
                                <div class="retJob">
                                    <div class="jobHeader categoryBanner-@color">
                                        <h6>@table.HiveDatabase_NME.@table.Hive_NME</h6>
                                        <i class="retJobDetails tracker-menu-icon glyphicon glyphicon-menu-up"></i>
                                        @if (table.IsPrimary)
                                        {
                                            <span style="float: right; margin-top: 10px;margin-right: 10px;"><span class="glyphicon glyphicon-ok"></span> Primary Hive Table</span>
                                        }
                                    </div>
                                    <div class="jobContainer" style="display:none;">
                                        <p>@table.Hive_DSC</p>
                                        <p>Created on: @table.Created_DTM</p>
                                        <p>Last Modified on: @table.Changed_DTM</p>
                                    </div>
                                </div>
                            }
                            <hr />
                        }*@
                                        <p>
                                            <a class="btn btn-primary" href="/Config/@item.ConfigId/Schema/@schema.DataElement_ID/Edit">Edit Schema Metadata</a>
                                            <br>
                                            <br>

                                            @if (schema.DataObjects.Count() > 0)
                                            {
                                                <a class="btn btn-primary" href="/Config/@item.ConfigId/Schema/@schema.DataElement_ID/Fields">Edit Columns and Fields</a>
                                            }
                                            @if (schema.DataObjects.Count() == 0)
                                            {
                                                <a class="btn btn-success" href="/Config/@item.ConfigId/Schema/@schema.DataElement_ID/Fields">Add Columns and Fields</a>
                                            }
                                        </p>
                                    </div>
                                </div>
                            }
                        }
                    </div>

                </div>
                <hr />
            }

        </div>
    }

        <div>
            @if (HttpContext.Current.IsDebuggingEnabled)
            {
                <a class="btn btn-success btnCreateDirectory"><span class="glyphicon glyphicon-plus"></span>  Create Directories</a>
                <hr />
            }
            <a class="btn btn-success" href="/Config/Dataset/@Model.DatasetId/Create"><span class="glyphicon glyphicon-plus"></span>  Create new Data File Configuration</a>
        </div>
    <hr />
}

    <div>
        <a class="backToList" href="/Dataset/Detail/@Model.DatasetId"><span class="glyphicon glyphicon-chevron-left"></span>  Back to Dataset Information</a>
    </div>

<style>
    .configDetailRow{
        padding-bottom: 15px;
    }
    .jobstatus {
        cursor: pointer;
        margin-right: 30px;
    }

    .configContainer {
        border-radius: 5px;
        border-top-left-radius: 0px;
        border-top-right-radius: 0px;
        background: white;
        border: 1px solid black;
        padding: 15px;
    }

    .configHeader {
        background-color: #555;
        color: white;
        display: inline-block;
        width: 100%;
        padding: 7px;
        cursor: pointer;
        border-radius: 5px 5px 5px 5px;
        font-weight: 700;
    }


        .configHeader h1 {
            color: white;
            padding-left: 15px;
            display: inline-block;
        }

        .configHeader .tracker-menu-icon {
            margin: 2px 10px 0 10px;
            color: white;
            display: inline-block;
        }

    .retJob {
        border-radius: 5px;
        background: white;
        padding-bottom: 5px;
    }

    .jobContainer {
        border-radius: 5px;
        border-top-left-radius: 0px;
        border-top-right-radius: 0px;
        background: white;
        border: 1px solid black;
        padding: 15px;
    }

    .jobHeader {
        background-color: #555;
        color: white;
        display: inline-block;
        width: 100%;
        padding: 7px;
        border-radius: 5px 5px 5px 5px;
        font-weight: 700;
    }
    .retJobDetails {
        cursor: pointer;
    } 
    
    .jobHeader h6 {
        color: white;
        padding-left: 15px;
        display: inline-block;
    }

        .jobHeader .tracker-menu-icon {
            margin: 2px 10px 0 10px;
            color: white;
            display: inline-block;
        }

    .on-demand-run {
        margin-bottom: 3px;
    }
</style>


@section Scripts {

    @Scripts.Render("~/bundles/prettyCron")

    <script>
        $(function () {
            data.Config.IndexInit();
        });
    </script>
}
