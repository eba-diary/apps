@model Sentry.data.Web.ManageConfigsModel

@{
    ViewBag.Title = "View Dataset Configuration Details";
    string color = "dsc-" + Model.CategoryColor + "-text";

    Layout = "~/Views/Shared/_Layout.cshtml";
}
<a class="backToList" href="/Dataset/Detail/@Model.DatasetId"><em class="fas fa-chevron-left pr-3"></em>  Back to Dataset Information</a>

<div class="topBanner" style="height: 60px;
    border-bottom: 1px #DDDDDD solid;">
    <div class="relative hidden-sm hidden-xs">
        <div>
            <div class="no-overflow">
                <h1 class="detailName leftFloat @color pt-0">
                    @Model.DatasetName
                </h1>
            </div>
        </div>
    </div>

    @*<div class="hidden-md hidden-lg">
            <h1 class="detailName leftFloat @color">
                @Model.DatasetName

                @if (Model.IsSecured)
                {
                    <span class="glyphicon glyphicon-lock lockIcon" data-toggle="tooltip" data-placement="top" title="Secure"></span>
                }
            </h1>

            <div>
                <div class="btn-group rightFloat dataset-operation-button" data-toggle="tooltip" data-placement="top" title="Additional Actions" style="margin-top: 5px;">
                    <button type="button"
                            class="btn btn-default borderdk_gray borderdk_@color dropdown"
                            data-toggle="dropdown">
                        <span class="glyphicon glyphicon-menu-hamburger @color"></span>
                    </button>

                    <ul class="dropdown-menu" x-placement="bottom-start" style="position: absolute; transform: translate3d(0px, 50px, 0px); top: -10px; left: 0px; will-change: transform;">
                        <li id="SubscribeModal" style="cursor: pointer;" data-id="@Model.DatasetId" data-placement="top" title="Subscribe">
                            <a>
                                Subscribe
                            </a>
                        </li>

                        @if (Model.CanQueryTool)
                        {
                            <li title="Query Dataset">
                                <a href="/Dataset/QueryTool?DatasetID=@Model.DatasetId">
                                    Query this Dataset
                                </a>
                            </li>
                        }
                        @if (Model.CanEditDataset)
                        {
                            <li>
                                <a href="/Config/Dataset/@Model.DatasetId">
                                    Manage Schemas
                                </a>
                            </li>
                        }

                        @if (Model.CanUpload)
                        {
                            <li id="UploadModal" data-id="@Model.DatasetId">
                                <a>Upload Files</a>
                            </li>
                        }

                        @if (Model.CanEditDataset)
                        {
                            <li id="EditDataset_@Model.DatasetId" data-id="@Model.DatasetId">
                                <a>Edit Dataset</a>
                            </li>
                        }
                    </ul>
                </div>
            </div>

        </div>*@

</div>

<p>Click any section header to begin:</p>

@{
    <div id="configs">


        @foreach (var item in Model.DatasetFileConfigs)
        {
            @* Do not display any objects with DELETED status *@
            if (item.ObjectStatus != Sentry.data.Core.GlobalEnums.ObjectStatusEnum.Deleted)
            {
                <div>
                    @* Only show ACTIVE objects to users.  Administrators can see ACTIVE\PENDING DELETE objects *@
                    @if ((item.ObjectStatus == Sentry.data.Core.GlobalEnums.ObjectStatusEnum.Active && !Model.Security.ShowAdminControls) || (Model.Security.ShowAdminControls && item.ObjectStatus != Sentry.data.Core.GlobalEnums.ObjectStatusEnum.Deleted))
                    {
                        <div class="configHeader categoryBanner-@Model.CategoryColor">
                            @if (item.ObjectStatus != Sentry.data.Core.GlobalEnums.ObjectStatusEnum.Active)
                            {
                                <h1 class="@color pt-3">@item.ConfigFileName <strong><em>(@Sentry.data.Core.GlobalEnums.ObjectStatusEnum.Pending_Delete.ToString())</em></strong></h1>
                            }
                            else
                            {
                                <h1 class="@color pt-3">@item.ConfigFileName</h1>
                            }
                            <em class="fas fa-chevron-up tracker-menu-icon"></em>
                        </div>
                        @*if (item.ObjectStatus == Sentry.data.Core.GlobalEnums.ObjectStatusEnum.Active)
                        {
                            <div class="configHeader categoryBanner-@color">
                                <h1 class="@color">@item.ConfigFileName</h1>
                                <i class="glyphicon glyphicon-menu-up tracker-menu-icon"></i>
                            </div>
                        }
                        else if (item.ObjectStatus == Sentry.data.Core.GlobalEnums.ObjectStatusEnum.Pending_Delete)
                        {
                            <div class="configHeader categoryBanner-gray">
                                <h1 class="@color">@item.ConfigFileName <strong><i>(@Sentry.data.Core.GlobalEnums.ObjectStatusEnum.Pending_Delete.ToString())</i></strong></h1>
                            </div>
                        }*@

                <div class="configContainer" style="display: none;">

                    <h4 class="@color pt-1">Configuration Metadata</h4>

                    <div class="col-md-12">
                        <div class="col-md-1">Description:</div>
                        <div class="col-md-11">
                            @if (item.ConfigFileDesc != null && item.ConfigFileDesc.Length >= 300)
                            {

                                int lastInfo = item.ConfigFileDesc.Substring(0, 300).LastIndexOf(" ");
                                <p>
                                    <span>@item.ConfigFileDesc.Substring(0, lastInfo)</span>
                                    <span id="usageSeeMoreEllipsis">...&nbsp;</span>
                                    <span id="usageSeeMorePanel" style="display: none;">@item.ConfigFileDesc.Substring(lastInfo)</span>
                                    <span id="usageSeeMoreButton" style="cursor: pointer;"><a onclick="$('#usageSeeMorePanel').show(); $(this).parent().hide(); $('#usageShowLessButton').show(); $('#usageSeeMoreEllipsis').hide();">See More</a></span>
                                    <span id="usageShowLessButton" style="cursor: pointer; display:none;"><a onclick="$('#usageSeeMorePanel').hide(); $(this).parent().hide(); $('#usageSeeMoreButton').show(); $('#usageSeeMoreEllipsis').show();">Show Less</a></span>
                                </p>
                            }
                            else
                            {
                                <p>@item.ConfigFileDesc</p>
                            }
                        </div>
                    </div>
                    <div class="col-md-12 configDetailRow">

                        @if (Model.Security.ShowAdminControls)
                        {
                            <div class="col-md-3">Storage id: <b>@item.RawStorageId</b></div>
                            <div class="col-md-3">Schema id: <b>@item.SchemaId</b> <i>(@item.OldSchemaId)</i></div>
                        }
                        else
                        {
                            <div class="col-md-3">Schema id: <b>@item.SchemaId</b></div>
                        }
                        <div class="col-md-3">Configuration classification: <b>@item.FileType</b></div>
                        <div class="col-md-3">File type: <b>@item.FileExtension.Name</b></div>
                    </div>
                    @if (item.FileExtension.Name.Trim() == "ANY" || item.FileExtension.Name.Trim() == "DELIMITED" || item.FileExtension.Name.Trim() == "CSV")
                    {
                        <div class="col-md-12 configDetailRow">
                            <div class="col-md-3">This schema's current Delimiter is ( <b>@item.Delimiter</b> )</div>
                            @if (Model.Security.ShowAdminControls)
                            {
                                <div class="col-md-3">Files contain headers: <b>@item.HasHeader</b></div>
                                <div class="col-md-6">CLA1396_NewEtlColumns: <b>@item.CLA1396_NewEtlColumns</b></div>
                            }
                            else
                            {
                                <div class="col-md-9">Files contain headers: <b>@item.HasHeader</b></div>
                            }
                        </div>
                    }

                    @if (item.FileExtension.Name.Trim() == "XML" || item.FileExtension.Name.Trim() == "JSON")
                    {
                        <div class="col-md-12 configDetailRow">
                            @if (String.IsNullOrWhiteSpace(item.SchemaRootPath))
                            {
                                <div class="col-md-9">Schema Root Path: <em>(Not Specified)</em></div>
                            }
                            else
                            {
                                <div class="col-md-9">Schema Root Path: <strong>@item.SchemaRootPath</strong></div>
                            }
                        </div>
                    }

                    <div class="col-md-12 configDetailRow">
                        @if (item.FileExtension.Name.Trim() == "ANY" || item.FileExtension.Name.Trim() == "DELIMITED" || item.FileExtension.Name.Trim() == "FIXEDWIDTH")
                        {<div class="col-md-12">This configuration will allow <b>all</b> file extensions.</div>}
                        else
                        {<div class="col-md-12">This configuration will only allow files with <b>.@item.FileExtension.Name.ToLower()</b> extension</div>}
                    </div>
                    <div class="col-md-12 configDetailRow">
                        <div class="col-md-12">This configuration Data Scope is <b>@item.ScopeType.Name</b> which means :</div>
                        <div class="col-md-11 col-md-offset-1">@item.ScopeType.Description</div>
                    </div>
                    <div class="col-md-12 configDetailRow">
                        @if (item.CreateCurrentView)
                        {
                            <div class="col-md-12">A current view exists for this schema which filters to data from latest file processed.</div>
                        }
                        else
                        {
                            <div class="col-md-12">This schema does not contain a current view</div>
                        }
                    </div>


                    <a class="btn btn-primary" href="/Config/Edit/@item.ConfigId">Edit</a>
                    <button class="btn btn-danger" id="btnDeleteConfig" data-id="@item.ConfigId">Delete</button>
                    @* Schema Metadata *@
                    @if (item.Schema != null)
                    {
                        <hr />
                        <h4 class="@color pt-1">Columns Metadata (name, datatype, is array, etc.)</h4>
                        <div class="columnsContainer col-md-12">
                            @if (item.Schema.Revisions.Count() == 0)
                            {
                                <p>This schema is not currently does not yet have any columns associated to it.</p>
                            }
                            <p>Created on: @item.Schema.CreatedDTM</p>
                            <p>Last Modified on: @item.Schema.LastUpdatedDTM</p>
                        </div>
                        if (item.Schema.Revisions.Count() > 0)
                        {
                            <a class="btn btn-primary" href="/Config/@item.ConfigId/Schema/@item.Schema.SchemaId/Fields">Edit Columns Metadata</a>
                            <a class="btn btn-primary" id="btnSyncSchema" data-datasetId="@Model.DatasetId" data-schemaId="@item.Schema.SchemaId">Sync Consumption Layer</a>
                        }
                        if (item.Schema.Revisions.Count() == 0)
                        {
                            <a class="btn btn-success" href="/Config/@item.ConfigId/Schema/@item.Schema.SchemaId/Fields">Add Columns Metadata</a>
                        }
                    }

                    @if (Model.DisplayDataflowMetadata || Model.Security.ShowAdminControls)
                    {
                        <hr />
                        <h4 class="@color pt-1">Producer DataFlow</h4>

                        @* Loop through each external dataflow *@
                        if (!item.ExternalDataFlowJobs.Any())
                        {
                            <p>This schema does not have any associated dataflows yet.</p>
                        }
                        foreach (var ext in item.ExternalDataFlowJobs)
                        {
                            <div class="retJob">
                                <div class="jobHeader categoryBanner-@color">
                                    <h6 class="pt-2">@ext.Name</h6>
                                    <em class="retJobDetails tracker-menu-icon fas fa-chevron-up"></em>
                                    @if (Model.DisplayDataflowEdit)
                                    {
                                        <div id="edit-dataflow-icon" class="float-r clickable" data-toggle="tooltip" data-placement="top" title="Edit DataFlow" onclick="data.DataFlow.EditUrlRedirect(@ext.Id)"><span class="far fa-edit"></span></div>
                                    }
                                </div>
                                <div class="jobContainer" style="display:none;">
                                    @if (ext.Step.Any(w => w.ActionName != "S3 Drop" || w.ActionName != "Raw Storage" || w.ActionName != "Schema Map"))
                                    {
                                        <p>This dataflow contains the following steps:</p>
                                        <ol>
                                            @foreach (DataFlowStepModel step in ext.Step.Where(w => w.ActionName != "S3 Drop" || w.ActionName != "Raw Storage" || w.ActionName != "Schema Map").OrderBy(o => o.ExecutionOrder))
                                            {
                                                <li>@step.ActionName</li>
                                            }
                                        </ol>
                                    }
                                    else
                                    {
                                        <p>This dataflow does not contain any special processing.</p>
                                    }

                                    @* DataflowStep metadata *@
                                    @foreach (DataFlowStepModel stepModel in ext.Step.Where(w => w.ActionName == "S3 Drop" || w.ActionName == "Producer S3 Drop"))
                                    {
                                        <div class="retJob @stepModel.ActionName">
                                            <div class="jobHeader categoryBanner-@color">
                                                <h6 class="pt-1">@stepModel.ActionName</h6>
                                                <em class="retJobDetails tracker-menu-icon fas fa-chevron-up"></em>
                                            </div>
                                            <div class="jobContainer" style="display:none;">
                                                <div><span>We are watching for files dropped in this AWS S3 url:</span></div>
                                                <div class="filePath"><span>@stepModel.RootAwsUrl@stepModel.TriggetKey</span></div>
                                            </div>
                                        </div>
                                    }
                                    @* Loop through associated retriever job metadata *@
                                    @foreach (Sentry.data.Core.RetrieverJob extJob in ext.RetrieverJobs)
                                    {
                                        Html.RenderPartial("~/Views/RetrieverJob/_RetrieverJob.cshtml", extJob, new ViewDataDictionary { { "Color", color } });
                                    }
                                </div>
                            </div>

                        }
                    }

                    @if (Model.DisplayDataflowMetadata && Model.Security.ShowAdminControls)
                    {
                        <hr />
                        <div class="adminContainer">
                            <strong><p style="color:red">This section is visible to Admins only</p></strong>
                            @if (item.DataFlowJobs == null)
                            {
                                <h4 class="gray pt-1">Schema DataFlow</h4>
                                <p>This schema does not have any associated dataflows yet.</p>
                            }
                            else
                            {
                                <div class="retJob">
                                    <div class="jobHeader categoryBanner-gray">
                                        <h6 class="pt-1">Schema DataFlow (@item.DataFlowJobs.Name)</h6>
                                        <em class="retJobDetails tracker-menu-icon fas fa-chevron-up"></em>
                                    </div>
                                    <div class="jobContainer" style="display:none;">
                                        @if (item.DataFlowJobs.Step.Any(w => w.ActionName != "S3 Drop" || w.ActionName != "Raw Storage" || w.ActionName != "Schema Map" || w.ActionName != "Producer S3 Drop"))
                                        {
                                            <p>This dataflow contains the following steps:</p>
                                            <ol>
                                                @foreach (DataFlowStepModel step in item.DataFlowJobs.Step.Where(w => w.ActionName != "S3 Drop" || w.ActionName != "Raw Storage" || w.ActionName != "Schema Map").OrderBy(o => o.ExecutionOrder))
                                                {
                                                    <li>@step.ActionName</li>
                                                }
                                            </ol>
                                        }
                                        else
                                        {
                                            <p>This dataflow does not contain any special processing.</p>
                                        }

                                        @* DataflowStep metadata *@
                                        @foreach (DataFlowStepModel stepModel in item.DataFlowJobs.Step.Where(w => w.ActionName == "S3 Drop" || w.ActionName == "Producer S3 Drop"))
                                        {
                                            <div class="retJob @stepModel.ActionName">
                                                <div class="jobHeader categoryBanner-@color">
                                                    <h6 class="pt-1">@stepModel.ActionName</h6>
                                                    <em class="retJobDetails tracker-menu-icon fas fa-chevron-up"></em>
                                                </div>
                                                <div class="jobContainer" style="display:none;">
                                                    <div><span>We are watching for files dropped in this AWS S3 url:</span></div>
                                                    <div class="filePath"><span>@stepModel.RootAwsUrl@stepModel.TriggetKey</span></div>
                                                </div>
                                            </div>
                                        }
                                        @* Loop through associated retriever job metadata *@
                                        @foreach (Sentry.data.Core.RetrieverJob extJob in item.DataFlowJobs.RetrieverJobs)
                                        {
                                            Html.RenderPartial("~/Views/RetrieverJob/_RetrieverJob.cshtml", extJob, new ViewDataDictionary { { "Color", color } });
                                        }
                                    </div>
                                </div>
                            }
                            @* // TODO - CLA-2372 - REMOVE COMMENTED CODE - Removing DFSBasic, DfsCustom, S3Basic references *@
                            @* Legacy Data Processing Platform Metadata *@
                            @*<div class="retJob">
                    <div class="jobHeader categoryBanner-gray">
                        <h6>Legacy Processing Platform Jobs</h6>
                        <em class="retJobDetails tracker-menu-icon glyphicon glyphicon-menu-up"></em>
                    </div>
                    <div class="jobContainer" style="display:none;">
                        <h4 class="@color">Dataset Retrieval Jobs</h4>
                        <hr />

                        @foreach (var job in item.RetrieverJobs)
                        {
                            Html.RenderPartial("~/Views/RetrieverJob/_RetrieverJob.cshtml", job, new ViewDataDictionary { { "Color", color } });
                        }

                        <a class="btn btn-success" href="/Config/@item.ConfigId/Job/Create">Add Job</a>
                    </div>
                </div>*@
                        </div>
                    }
                </div>
                    }
                </div>
                <hr />
            }
        }

    </div>

    <div>
        @if (HttpContext.Current.IsDebuggingEnabled)
        {
            <a class="btn btn-success btnCreateDirectory"><em class="fas fa-plus"></em>  Create Directories</a>
            <hr />
        }
        <a class="btn btn-success" href="/Config/Dataset/@Model.DatasetId/Create"><em class="fas fa-plus"></em>  Create new Data File Configuration</a>
    </div>
    <hr />
}

<div>
    <a class="backToList" href="/Dataset/Detail/@Model.DatasetId"><em class="fas fa-chevron-left pr-3"></em>  Back to Dataset Information</a>
</div>

<style>
    .filePath {
        margin-left: 30px;
    }

    .configDetailRow {
        padding-bottom: 15px;
    }

    .jobstatus {
        cursor: pointer;
        margin-right: 30px;
    }

    .configContainer {
        border-radius: 5px;
        border-top-left-radius: 0px;
        border-top-right-radius: 0px;
        background: white;
        border: 1px solid black;
        padding: 15px;
    }

    .configHeader {
        background-color: #555;
        color: white;
        display: inline-block;
        width: 100%;
        padding: 7px;
        cursor: pointer;
        border-radius: 5px 5px 5px 5px;
        font-weight: 700;
    }


        .configHeader h1 {
            color: white;
            padding-left: 15px;
            display: inline-block;
        }

        .configHeader .tracker-menu-icon {
            margin: 2px 10px 0 10px;
            color: white;
            display: inline-block;
        }

    .retJob {
        border-radius: 5px;
        background: white;
        padding-bottom: 5px;
    }

    .jobContainer {
        border-radius: 5px;
        border-top-left-radius: 0px;
        border-top-right-radius: 0px;
        background: white;
        border: 1px solid black;
        padding: 15px;
    }

    .jobHeader {
        background-color: #555;
        color: white;
        display: inline-block;
        width: 100%;
        padding: 7px;
        border-radius: 5px 5px 5px 5px;
        font-weight: 700;
    }

    .retJobDetails {
        cursor: pointer;
    }

    .jobHeader h6 {
        color: white;
        padding-left: 15px;
        display: inline-block;
    }

    .jobHeader .tracker-menu-icon {
        margin: 2px 10px 0 10px;
        color: white;
        display: inline-block;
    }

    .on-demand-run {
        margin-bottom: 3px;
    }
</style>


@section Scripts {

    @Scripts.Render("~/bundles/prettyCron")

    <script>
        $(function () {
            data.Config.IndexInit();
        });
    </script>
}
