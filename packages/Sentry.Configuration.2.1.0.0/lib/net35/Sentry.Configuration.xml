<?xml version="1.0"?>
<doc>
<assembly>
<name>
Sentry.Configuration
</name>
</assembly>
<members>
<member name="P:Sentry.Configuration.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:Sentry.Configuration.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:Sentry.Configuration.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="T:Sentry.Configuration.HttpHeaderPresentFilterSignature">
	<summary>
 Filter that is looking for the presence of an HTTP header with a specific name
 </summary>
	<remarks></remarks>
</member><member name="T:Sentry.Configuration.HttpHeaderAbsentFilterSignature">
	<summary>
 Filter that is looking for the absence of an HTTP header with a specific name
 </summary>
	<remarks></remarks>
</member><member name="M:Sentry.Configuration.EnvironmentSettingsSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
	<doc>
		<summary>Creates a configuration section handler for the environment specific settings used in your applications.</summary>
		<returns>The created section handler object.</returns>
		<param name="parent">Parent object.</param>
		<param name="section">Section XML node.</param>
		<param name="configContext">Configuration context object.</param>
		<filterpriority>2</filterpriority>
	</doc>
</member><member name="M:Sentry.Configuration.Config.GetSetting(System.String)">
	<summary>
 Gets the specified setting from the default configuration file.
 </summary>
	<param name="key">The key used to look up the desired configuration setting.</param>
	<returns></returns>
</member><member name="M:Sentry.Configuration.Config.GetHostSetting(System.String)">
	<summary>
 Gets the specified setting from the default configuration file that utilizes the Sentry EnvironmentSettings framework.
 </summary>
	<remarks>
 GetHostSetting utilizes the environment in which the application is running as well as a key specified by the developer to locate
 the appropriate configuration value.
 
 First, it checks for the existence of a host header in the case of web applications and utilizes that.  Next, if the host header does not exist,
 GetHostSetting checks for the current environment's machine name, i.e. shoisujd.  If that is not found then a ConfigurationErrorsException
 will be thrown.
 
 If a host header is found but a corresponding config value is not found GetHostSetting will use the default domain, if specified, to
 try to locate the config value.  If a config value is still not found a ConfigurationErrorsException will be thrown.
 
 If a host override is specified in the EnvironmentSettings that host name will be used no matter what.
 </remarks>
	<param name="key">The key used to look up the desired configuration setting.</param>
	<returns></returns>
</member>
</members>
</doc>